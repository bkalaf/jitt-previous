import { MRT_ColumnDef } from 'material-react-table';
import { IProduct } from '../../../types';
export declare const h: import("material-react-table").MRT_ColumnHelper<IProduct>;
export declare const helper: {
    bool: <U, UKey extends keyof U>(...dependencies: IDependency<U, UKey>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header?: string | undefined) => MRT_ColumnDef<IProduct, boolean | undefined>;
    clothingCare: <U_1, UKey_1 extends keyof U_1>(...dependencies: IDependency<U_1, UKey_1>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector" | "_id.toString" | "_id.id" | "_id.toJSON" | "_id._bsontype" | "_id.generationTime" | "_id.toHexString" | "_id.equals" | "_id.getTimestamp" | "_id.inspect" | "_id.id.indexOf" | "_id.id.lastIndexOf" | "_id.id.slice" | "_id.id.length" | "_id.id.includes" | "_id.id.at" | "_id.id.toLocaleString" | "_id.id.toString" | "_id.id.join" | "_id.id.reverse" | "_id.id.sort" | "_id.id.every" | "_id.id.some" | "_id.id.forEach" | "_id.id.map" | "_id.id.filter" | "_id.id.reduce" | "_id.id.reduceRight" | "_id.id.find" | "_id.id.findIndex" | "_id.id.fill" | "_id.id.copyWithin" | "_id.id.entries" | "_id.id.keys" | "_id.id.values" | "_id.id.findLast" | "_id.id.findLastIndex" | "_id.id.toReversed" | "_id.id.toSorted" | "_id.id.with" | "_id.id.set" | "_id.id.toJSON" | "_id.id.valueOf" | "_id.id.equals" | "_id.id.write" | "_id.id.compare" | "_id.id.copy" | "_id.id.subarray" | "_id.id.writeBigInt64BE" | "_id.id.writeBigInt64LE" | "_id.id.writeBigUInt64BE" | "_id.id.writeBigUint64BE" | "_id.id.writeBigUInt64LE" | "_id.id.writeBigUint64LE" | "_id.id.writeUIntLE" | "_id.id.writeUintLE" | "_id.id.writeUIntBE" | "_id.id.writeUintBE" | "_id.id.writeIntLE" | "_id.id.writeIntBE" | "_id.id.readBigUInt64BE" | "_id.id.readBigUint64BE" | "_id.id.readBigUInt64LE" | "_id.id.readBigUint64LE" | "_id.id.readBigInt64BE" | "_id.id.readBigInt64LE" | "_id.id.readUIntLE" | "_id.id.readUintLE" | "_id.id.readUIntBE" | "_id.id.readUintBE" | "_id.id.readIntLE" | "_id.id.readIntBE" | "_id.id.readUInt8" | "_id.id.readUint8" | "_id.id.readUInt16LE" | "_id.id.readUint16LE" | "_id.id.readUInt16BE" | "_id.id.readUint16BE" | "_id.id.readUInt32LE" | "_id.id.readUint32LE" | "_id.id.readUInt32BE" | "_id.id.readUint32BE" | "_id.id.readInt8" | "_id.id.readInt16LE" | "_id.id.readInt16BE" | "_id.id.readInt32LE" | "_id.id.readInt32BE" | "_id.id.readFloatLE" | "_id.id.readFloatBE" | "_id.id.readDoubleLE" | "_id.id.readDoubleBE" | "_id.id.swap16" | "_id.id.swap32" | "_id.id.swap64" | "_id.id.writeUInt8" | "_id.id.writeUint8" | "_id.id.writeUInt16LE" | "_id.id.writeUint16LE" | "_id.id.writeUInt16BE" | "_id.id.writeUint16BE" | "_id.id.writeUInt32LE" | "_id.id.writeUint32LE" | "_id.id.writeUInt32BE" | "_id.id.writeUint32BE" | "_id.id.writeInt8" | "_id.id.writeInt16LE" | "_id.id.writeInt16BE" | "_id.id.writeInt32LE" | "_id.id.writeInt32BE" | "_id.id.writeFloatLE" | "_id.id.writeFloatBE" | "_id.id.writeDoubleLE" | "_id.id.writeDoubleBE" | "_id.id.BYTES_PER_ELEMENT" | "_id.id.buffer" | "_id.id.byteLength" | "_id.id.byteOffset" | "_id.id.buffer.slice" | "_id.id.buffer.byteLength" | "hashTags.concat" | "hashTags.indexOf" | "hashTags.lastIndexOf" | "hashTags.slice" | "hashTags.length" | "hashTags.includes" | "hashTags.at" | "hashTags.toLocaleString" | "hashTags.toString" | "hashTags.pop" | "hashTags.push" | "hashTags.join" | "hashTags.shift" | "hashTags.splice" | "hashTags.unshift" | "hashTags.every" | "hashTags.some" | "hashTags.forEach" | "hashTags.map" | "hashTags.filter" | "hashTags.reduce" | "hashTags.reduceRight" | "hashTags.find" | "hashTags.findIndex" | "hashTags.entries" | "hashTags.keys" | "hashTags.values" | "hashTags.flatMap" | "hashTags.flat" | "hashTags.type" | "hashTags.isValid" | "hashTags.toJSON" | "hashTags.addListener" | "hashTags.removeListener" | "hashTags.removeAllListeners" | "hashTags.optional" | "hashTags.description" | "hashTags.min" | "hashTags.max" | "hashTags.remove" | "hashTags.move" | "hashTags.swap" | "hashTags.isEmpty" | "hashTags.sum" | "hashTags.avg" | "hashTags.filtered" | "hashTags.sorted" | "hashTags.snapshot" | `allHashTags.${number}` | `allHashTags.${number}.name` | `allHashTags.${number}._id` | `allHashTags.${number}._id.toString` | `allHashTags.${number}._id.id` | `allHashTags.${number}._id.toJSON` | `allHashTags.${number}._id._bsontype` | `allHashTags.${number}._id.generationTime` | `allHashTags.${number}._id.toHexString` | `allHashTags.${number}._id.equals` | `allHashTags.${number}._id.getTimestamp` | `allHashTags.${number}._id.inspect` | `allHashTags.${number}._id.id.indexOf` | `allHashTags.${number}._id.id.lastIndexOf` | `allHashTags.${number}._id.id.slice` | `allHashTags.${number}._id.id.length` | `allHashTags.${number}._id.id.includes` | `allHashTags.${number}._id.id.at` | `allHashTags.${number}._id.id.toLocaleString` | `allHashTags.${number}._id.id.toString` | `allHashTags.${number}._id.id.join` | `allHashTags.${number}._id.id.reverse` | `allHashTags.${number}._id.id.sort` | `allHashTags.${number}._id.id.every` | `allHashTags.${number}._id.id.some` | `allHashTags.${number}._id.id.forEach` | `allHashTags.${number}._id.id.map` | `allHashTags.${number}._id.id.filter` | `allHashTags.${number}._id.id.reduce` | `allHashTags.${number}._id.id.reduceRight` | `allHashTags.${number}._id.id.find` | `allHashTags.${number}._id.id.findIndex` | `allHashTags.${number}._id.id.fill` | `allHashTags.${number}._id.id.copyWithin` | `allHashTags.${number}._id.id.entries` | `allHashTags.${number}._id.id.keys` | `allHashTags.${number}._id.id.values` | `allHashTags.${number}._id.id.findLast` | `allHashTags.${number}._id.id.findLastIndex` | `allHashTags.${number}._id.id.toReversed` | `allHashTags.${number}._id.id.toSorted` | `allHashTags.${number}._id.id.with` | `allHashTags.${number}._id.id.set` | `allHashTags.${number}._id.id.toJSON` | `allHashTags.${number}._id.id.valueOf` | `allHashTags.${number}._id.id.equals` | `allHashTags.${number}._id.id.write` | `allHashTags.${number}._id.id.compare` | `allHashTags.${number}._id.id.copy` | `allHashTags.${number}._id.id.subarray` | `allHashTags.${number}._id.id.writeBigInt64BE` | `allHashTags.${number}._id.id.writeBigInt64LE` | `allHashTags.${number}._id.id.writeBigUInt64BE` | `allHashTags.${number}._id.id.writeBigUint64BE` | `allHashTags.${number}._id.id.writeBigUInt64LE` | `allHashTags.${number}._id.id.writeBigUint64LE` | `allHashTags.${number}._id.id.writeUIntLE` | `allHashTags.${number}._id.id.writeUintLE` | `allHashTags.${number}._id.id.writeUIntBE` | `allHashTags.${number}._id.id.writeUintBE` | `allHashTags.${number}._id.id.writeIntLE` | `allHashTags.${number}._id.id.writeIntBE` | `allHashTags.${number}._id.id.readBigUInt64BE` | `allHashTags.${number}._id.id.readBigUint64BE` | `allHashTags.${number}._id.id.readBigUInt64LE` | `allHashTags.${number}._id.id.readBigUint64LE` | `allHashTags.${number}._id.id.readBigInt64BE` | `allHashTags.${number}._id.id.readBigInt64LE` | `allHashTags.${number}._id.id.readUIntLE` | `allHashTags.${number}._id.id.readUintLE` | `allHashTags.${number}._id.id.readUIntBE` | `allHashTags.${number}._id.id.readUintBE` | `allHashTags.${number}._id.id.readIntLE` | `allHashTags.${number}._id.id.readIntBE` | `allHashTags.${number}._id.id.readUInt8` | `allHashTags.${number}._id.id.readUint8` | `allHashTags.${number}._id.id.readUInt16LE` | `allHashTags.${number}._id.id.readUint16LE` | `allHashTags.${number}._id.id.readUInt16BE` | `allHashTags.${number}._id.id.readUint16BE` | `allHashTags.${number}._id.id.readUInt32LE` | `allHashTags.${number}._id.id.readUint32LE` | `allHashTags.${number}._id.id.readUInt32BE` | `allHashTags.${number}._id.id.readUint32BE` | `allHashTags.${number}._id.id.readInt8` | `allHashTags.${number}._id.id.readInt16LE` | `allHashTags.${number}._id.id.readInt16BE` | `allHashTags.${number}._id.id.readInt32LE` | `allHashTags.${number}._id.id.readInt32BE` | `allHashTags.${number}._id.id.readFloatLE` | `allHashTags.${number}._id.id.readFloatBE` | `allHashTags.${number}._id.id.readDoubleLE` | `allHashTags.${number}._id.id.readDoubleBE` | `allHashTags.${number}._id.id.swap16` | `allHashTags.${number}._id.id.swap32` | `allHashTags.${number}._id.id.swap64` | `allHashTags.${number}._id.id.writeUInt8` | `allHashTags.${number}._id.id.writeUint8` | `allHashTags.${number}._id.id.writeUInt16LE` | `allHashTags.${number}._id.id.writeUint16LE` | `allHashTags.${number}._id.id.writeUInt16BE` | `allHashTags.${number}._id.id.writeUint16BE` | `allHashTags.${number}._id.id.writeUInt32LE` | `allHashTags.${number}._id.id.writeUint32LE` | `allHashTags.${number}._id.id.writeUInt32BE` | `allHashTags.${number}._id.id.writeUint32BE` | `allHashTags.${number}._id.id.writeInt8` | `allHashTags.${number}._id.id.writeInt16LE` | `allHashTags.${number}._id.id.writeInt16BE` | `allHashTags.${number}._id.id.writeInt32LE` | `allHashTags.${number}._id.id.writeInt32BE` | `allHashTags.${number}._id.id.writeFloatLE` | `allHashTags.${number}._id.id.writeFloatBE` | `allHashTags.${number}._id.id.writeDoubleLE` | `allHashTags.${number}._id.id.writeDoubleBE` | `allHashTags.${number}._id.id.BYTES_PER_ELEMENT` | `allHashTags.${number}._id.id.buffer` | `allHashTags.${number}._id.id.byteLength` | `allHashTags.${number}._id.id.byteOffset` | `allHashTags.${number}._id.id.buffer.slice` | `allHashTags.${number}._id.id.buffer.byteLength` | `allHashTags.${number}.usage` | `allHashTags.${number}.maxCount` | `allHashTags.${number}.mostRecent` | `allHashTags.${number}.usage.concat` | `allHashTags.${number}.usage.indexOf` | `allHashTags.${number}.usage.lastIndexOf` | `allHashTags.${number}.usage.slice` | `allHashTags.${number}.usage.length` | `allHashTags.${number}.usage.includes` | `allHashTags.${number}.usage.at` | `allHashTags.${number}.usage.toLocaleString` | `allHashTags.${number}.usage.toString` | `allHashTags.${number}.usage.pop` | `allHashTags.${number}.usage.push` | `allHashTags.${number}.usage.join` | `allHashTags.${number}.usage.shift` | `allHashTags.${number}.usage.splice` | `allHashTags.${number}.usage.unshift` | `allHashTags.${number}.usage.every` | `allHashTags.${number}.usage.some` | `allHashTags.${number}.usage.forEach` | `allHashTags.${number}.usage.map` | `allHashTags.${number}.usage.filter` | `allHashTags.${number}.usage.reduce` | `allHashTags.${number}.usage.reduceRight` | `allHashTags.${number}.usage.find` | `allHashTags.${number}.usage.findIndex` | `allHashTags.${number}.usage.entries` | `allHashTags.${number}.usage.keys` | `allHashTags.${number}.usage.values` | `allHashTags.${number}.usage.flatMap` | `allHashTags.${number}.usage.flat` | `allHashTags.${number}.usage.type` | `allHashTags.${number}.usage.isValid` | `allHashTags.${number}.usage.toJSON` | `allHashTags.${number}.usage.addListener` | `allHashTags.${number}.usage.removeListener` | `allHashTags.${number}.usage.removeAllListeners` | `allHashTags.${number}.usage.optional` | `allHashTags.${number}.usage.description` | `allHashTags.${number}.usage.min` | `allHashTags.${number}.usage.max` | `allHashTags.${number}.usage.remove` | `allHashTags.${number}.usage.move` | `allHashTags.${number}.usage.swap` | `allHashTags.${number}.usage.isEmpty` | `allHashTags.${number}.usage.sum` | `allHashTags.${number}.usage.avg` | `allHashTags.${number}.usage.filtered` | `allHashTags.${number}.usage.sorted` | `allHashTags.${number}.usage.snapshot` | "length.value" | "length.uom" | "width.value" | "width.uom" | "includes.concat" | "includes.indexOf" | "includes.lastIndexOf" | "includes.slice" | "includes.length" | "includes.includes" | "includes.at" | "includes.toLocaleString" | "includes.toString" | "includes.pop" | "includes.push" | "includes.join" | "includes.shift" | "includes.splice" | "includes.unshift" | "includes.every" | "includes.some" | "includes.forEach" | "includes.map" | "includes.filter" | "includes.reduce" | "includes.reduceRight" | "includes.find" | "includes.findIndex" | "includes.entries" | "includes.keys" | "includes.values" | "includes.flatMap" | "includes.flat" | "includes.type" | "includes.isValid" | "includes.toJSON" | "includes.addListener" | "includes.removeListener" | "includes.removeAllListeners" | "includes.optional" | "includes.description" | "includes.min" | "includes.max" | "includes.remove" | "includes.move" | "includes.swap" | "includes.isEmpty" | "includes.sum" | "includes.avg" | "includes.filtered" | "includes.sorted" | "includes.snapshot" | "flags.concat" | "flags.indexOf" | "flags.lastIndexOf" | "flags.slice" | "flags.length" | "flags.includes" | "flags.at" | "flags.toLocaleString" | "flags.toString" | "flags.pop" | "flags.push" | "flags.join" | "flags.shift" | "flags.splice" | "flags.unshift" | "flags.every" | "flags.some" | "flags.forEach" | "flags.map" | "flags.filter" | "flags.reduce" | "flags.reduceRight" | "flags.find" | "flags.findIndex" | "flags.entries" | "flags.keys" | "flags.values" | "flags.flatMap" | "flags.flat" | "flags.type" | "flags.isValid" | "flags.toJSON" | "flags.addListener" | "flags.removeListener" | "flags.removeAllListeners" | "flags.optional" | "flags.description" | "flags.min" | "flags.max" | "flags.remove" | "flags.move" | "flags.swap" | "flags.isEmpty" | "flags.sum" | "flags.avg" | "flags.filtered" | "flags.sorted" | "flags.snapshot" | "powerTypes.concat" | "powerTypes.indexOf" | "powerTypes.lastIndexOf" | "powerTypes.slice" | "powerTypes.length" | "powerTypes.includes" | "powerTypes.at" | "powerTypes.toLocaleString" | "powerTypes.toString" | "powerTypes.pop" | "powerTypes.push" | "powerTypes.join" | "powerTypes.shift" | "powerTypes.splice" | "powerTypes.unshift" | "powerTypes.every" | "powerTypes.some" | "powerTypes.forEach" | "powerTypes.map" | "powerTypes.filter" | "powerTypes.reduce" | "powerTypes.reduceRight" | "powerTypes.find" | "powerTypes.findIndex" | "powerTypes.entries" | "powerTypes.keys" | "powerTypes.values" | "powerTypes.flatMap" | "powerTypes.flat" | "powerTypes.type" | "powerTypes.isValid" | "powerTypes.toJSON" | "powerTypes.addListener" | "powerTypes.removeListener" | "powerTypes.removeAllListeners" | "powerTypes.optional" | "powerTypes.description" | "powerTypes.min" | "powerTypes.max" | "powerTypes.remove" | "powerTypes.move" | "powerTypes.swap" | "powerTypes.isEmpty" | "powerTypes.sum" | "powerTypes.avg" | "powerTypes.filtered" | "powerTypes.sorted" | "powerTypes.snapshot" | "compatibleDevices.concat" | "compatibleDevices.indexOf" | "compatibleDevices.lastIndexOf" | "compatibleDevices.slice" | "compatibleDevices.length" | "compatibleDevices.includes" | "compatibleDevices.at" | "compatibleDevices.toLocaleString" | "compatibleDevices.toString" | "compatibleDevices.pop" | "compatibleDevices.push" | "compatibleDevices.join" | "compatibleDevices.shift" | "compatibleDevices.splice" | "compatibleDevices.unshift" | "compatibleDevices.every" | "compatibleDevices.some" | "compatibleDevices.forEach" | "compatibleDevices.map" | "compatibleDevices.filter" | "compatibleDevices.reduce" | "compatibleDevices.reduceRight" | "compatibleDevices.find" | "compatibleDevices.findIndex" | "compatibleDevices.entries" | "compatibleDevices.keys" | "compatibleDevices.values" | "compatibleDevices.flatMap" | "compatibleDevices.flat" | "compatibleDevices.type" | "compatibleDevices.isValid" | "compatibleDevices.toJSON" | "compatibleDevices.addListener" | "compatibleDevices.removeListener" | "compatibleDevices.removeAllListeners" | "compatibleDevices.optional" | "compatibleDevices.description" | "compatibleDevices.min" | "compatibleDevices.max" | "compatibleDevices.remove" | "compatibleDevices.move" | "compatibleDevices.swap" | "compatibleDevices.isEmpty" | "compatibleDevices.sum" | "compatibleDevices.avg" | "compatibleDevices.filtered" | "compatibleDevices.sorted" | "compatibleDevices.snapshot" | "connectivity.concat" | "connectivity.indexOf" | "connectivity.lastIndexOf" | "connectivity.slice" | "connectivity.length" | "connectivity.includes" | "connectivity.at" | "connectivity.toLocaleString" | "connectivity.toString" | "connectivity.pop" | "connectivity.push" | "connectivity.join" | "connectivity.shift" | "connectivity.splice" | "connectivity.unshift" | "connectivity.every" | "connectivity.some" | "connectivity.forEach" | "connectivity.map" | "connectivity.filter" | "connectivity.reduce" | "connectivity.reduceRight" | "connectivity.find" | "connectivity.findIndex" | "connectivity.entries" | "connectivity.keys" | "connectivity.values" | "connectivity.flatMap" | "connectivity.flat" | "connectivity.type" | "connectivity.isValid" | "connectivity.toJSON" | "connectivity.addListener" | "connectivity.removeListener" | "connectivity.removeAllListeners" | "connectivity.optional" | "connectivity.description" | "connectivity.min" | "connectivity.max" | "connectivity.remove" | "connectivity.move" | "connectivity.swap" | "connectivity.isEmpty" | "connectivity.sum" | "connectivity.avg" | "connectivity.filtered" | "connectivity.sorted" | "connectivity.snapshot" | "color.concat" | "color.indexOf" | "color.lastIndexOf" | "color.slice" | "color.length" | "color.includes" | "color.at" | "color.toLocaleString" | "color.toString" | "color.pop" | "color.push" | "color.join" | "color.shift" | "color.splice" | "color.unshift" | "color.every" | "color.some" | "color.forEach" | "color.map" | "color.filter" | "color.reduce" | "color.reduceRight" | "color.find" | "color.findIndex" | "color.entries" | "color.keys" | "color.values" | "color.flatMap" | "color.flat" | "color.type" | "color.isValid" | "color.toJSON" | "color.addListener" | "color.removeListener" | "color.removeAllListeners" | "color.optional" | "color.description" | "color.min" | "color.max" | "color.remove" | "color.move" | "color.swap" | "color.isEmpty" | "color.sum" | "color.avg" | "color.filtered" | "color.sorted" | "color.snapshot" | "type.concat" | "type.indexOf" | "type.lastIndexOf" | "type.slice" | "type.length" | "type.includes" | "type.at" | "type.toLocaleString" | "type.toString" | "type.pop" | "type.push" | "type.join" | "type.shift" | "type.splice" | "type.unshift" | "type.every" | "type.some" | "type.forEach" | "type.map" | "type.filter" | "type.reduce" | "type.reduceRight" | "type.find" | "type.findIndex" | "type.entries" | "type.keys" | "type.values" | "type.flatMap" | "type.flat" | "type.type" | "type.isValid" | "type.toJSON" | "type.addListener" | "type.removeListener" | "type.removeAllListeners" | "type.optional" | "type.description" | "type.min" | "type.max" | "type.remove" | "type.move" | "type.swap" | "type.isEmpty" | "type.sum" | "type.avg" | "type.filtered" | "type.sorted" | "type.snapshot" | "input.amperage" | "input.voltage" | "input.wattage" | "input.amperage.value" | "input.amperage.uom" | "input.voltage.value" | "input.voltage.uom" | "input.wattage.value" | "input.wattage.uom" | "output.amperage" | "output.voltage" | "output.wattage" | "output.amperage.value" | "output.amperage.uom" | "output.voltage.value" | "output.voltage.uom" | "output.wattage.value" | "output.wattage.uom" | `detailTypes.${number}` | "height.value" | "height.uom" | "brand.name" | "brand._id" | "brand.hashTags" | "brand.allHashTags" | "brand.mercariBrand" | "brand._id.toString" | "brand._id.id" | "brand._id.toJSON" | "brand._id._bsontype" | "brand._id.generationTime" | "brand._id.toHexString" | "brand._id.equals" | "brand._id.getTimestamp" | "brand._id.inspect" | "brand._id.id.indexOf" | "brand._id.id.lastIndexOf" | "brand._id.id.slice" | "brand._id.id.length" | "brand._id.id.includes" | "brand._id.id.at" | "brand._id.id.toLocaleString" | "brand._id.id.toString" | "brand._id.id.join" | "brand._id.id.reverse" | "brand._id.id.sort" | "brand._id.id.every" | "brand._id.id.some" | "brand._id.id.forEach" | "brand._id.id.map" | "brand._id.id.filter" | "brand._id.id.reduce" | "brand._id.id.reduceRight" | "brand._id.id.find" | "brand._id.id.findIndex" | "brand._id.id.fill" | "brand._id.id.copyWithin" | "brand._id.id.entries" | "brand._id.id.keys" | "brand._id.id.values" | "brand._id.id.findLast" | "brand._id.id.findLastIndex" | "brand._id.id.toReversed" | "brand._id.id.toSorted" | "brand._id.id.with" | "brand._id.id.set" | "brand._id.id.toJSON" | "brand._id.id.valueOf" | "brand._id.id.equals" | "brand._id.id.write" | "brand._id.id.compare" | "brand._id.id.copy" | "brand._id.id.subarray" | "brand._id.id.writeBigInt64BE" | "brand._id.id.writeBigInt64LE" | "brand._id.id.writeBigUInt64BE" | "brand._id.id.writeBigUint64BE" | "brand._id.id.writeBigUInt64LE" | "brand._id.id.writeBigUint64LE" | "brand._id.id.writeUIntLE" | "brand._id.id.writeUintLE" | "brand._id.id.writeUIntBE" | "brand._id.id.writeUintBE" | "brand._id.id.writeIntLE" | "brand._id.id.writeIntBE" | "brand._id.id.readBigUInt64BE" | "brand._id.id.readBigUint64BE" | "brand._id.id.readBigUInt64LE" | "brand._id.id.readBigUint64LE" | "brand._id.id.readBigInt64BE" | "brand._id.id.readBigInt64LE" | "brand._id.id.readUIntLE" | "brand._id.id.readUintLE" | "brand._id.id.readUIntBE" | "brand._id.id.readUintBE" | "brand._id.id.readIntLE" | "brand._id.id.readIntBE" | "brand._id.id.readUInt8" | "brand._id.id.readUint8" | "brand._id.id.readUInt16LE" | "brand._id.id.readUint16LE" | "brand._id.id.readUInt16BE" | "brand._id.id.readUint16BE" | "brand._id.id.readUInt32LE" | "brand._id.id.readUint32LE" | "brand._id.id.readUInt32BE" | "brand._id.id.readUint32BE" | "brand._id.id.readInt8" | "brand._id.id.readInt16LE" | "brand._id.id.readInt16BE" | "brand._id.id.readInt32LE" | "brand._id.id.readInt32BE" | "brand._id.id.readFloatLE" | "brand._id.id.readFloatBE" | "brand._id.id.readDoubleLE" | "brand._id.id.readDoubleBE" | "brand._id.id.swap16" | "brand._id.id.swap32" | "brand._id.id.swap64" | "brand._id.id.writeUInt8" | "brand._id.id.writeUint8" | "brand._id.id.writeUInt16LE" | "brand._id.id.writeUint16LE" | "brand._id.id.writeUInt16BE" | "brand._id.id.writeUint16BE" | "brand._id.id.writeUInt32LE" | "brand._id.id.writeUint32LE" | "brand._id.id.writeUInt32BE" | "brand._id.id.writeUint32BE" | "brand._id.id.writeInt8" | "brand._id.id.writeInt16LE" | "brand._id.id.writeInt16BE" | "brand._id.id.writeInt32LE" | "brand._id.id.writeInt32BE" | "brand._id.id.writeFloatLE" | "brand._id.id.writeFloatBE" | "brand._id.id.writeDoubleLE" | "brand._id.id.writeDoubleBE" | "brand._id.id.BYTES_PER_ELEMENT" | "brand._id.id.buffer" | "brand._id.id.byteLength" | "brand._id.id.byteOffset" | "brand._id.id.buffer.slice" | "brand._id.id.buffer.byteLength" | "brand.hashTags.concat" | "brand.hashTags.indexOf" | "brand.hashTags.lastIndexOf" | "brand.hashTags.slice" | "brand.hashTags.length" | "brand.hashTags.includes" | "brand.hashTags.at" | "brand.hashTags.toLocaleString" | "brand.hashTags.toString" | "brand.hashTags.pop" | "brand.hashTags.push" | "brand.hashTags.join" | "brand.hashTags.shift" | "brand.hashTags.splice" | "brand.hashTags.unshift" | "brand.hashTags.every" | "brand.hashTags.some" | "brand.hashTags.forEach" | "brand.hashTags.map" | "brand.hashTags.filter" | "brand.hashTags.reduce" | "brand.hashTags.reduceRight" | "brand.hashTags.find" | "brand.hashTags.findIndex" | "brand.hashTags.entries" | "brand.hashTags.keys" | "brand.hashTags.values" | "brand.hashTags.flatMap" | "brand.hashTags.flat" | "brand.hashTags.type" | "brand.hashTags.isValid" | "brand.hashTags.toJSON" | "brand.hashTags.addListener" | "brand.hashTags.removeListener" | "brand.hashTags.removeAllListeners" | "brand.hashTags.optional" | "brand.hashTags.description" | "brand.hashTags.min" | "brand.hashTags.max" | "brand.hashTags.remove" | "brand.hashTags.move" | "brand.hashTags.swap" | "brand.hashTags.isEmpty" | "brand.hashTags.sum" | "brand.hashTags.avg" | "brand.hashTags.filtered" | "brand.hashTags.sorted" | "brand.hashTags.snapshot" | `brand.allHashTags.${number}` | `brand.allHashTags.${number}.name` | `brand.allHashTags.${number}._id` | `brand.allHashTags.${number}._id.toString` | `brand.allHashTags.${number}._id.id` | `brand.allHashTags.${number}._id.toJSON` | `brand.allHashTags.${number}._id._bsontype` | `brand.allHashTags.${number}._id.generationTime` | `brand.allHashTags.${number}._id.toHexString` | `brand.allHashTags.${number}._id.equals` | `brand.allHashTags.${number}._id.getTimestamp` | `brand.allHashTags.${number}._id.inspect` | `brand.allHashTags.${number}._id.id.indexOf` | `brand.allHashTags.${number}._id.id.lastIndexOf` | `brand.allHashTags.${number}._id.id.slice` | `brand.allHashTags.${number}._id.id.length` | `brand.allHashTags.${number}._id.id.includes` | `brand.allHashTags.${number}._id.id.at` | `brand.allHashTags.${number}._id.id.toLocaleString` | `brand.allHashTags.${number}._id.id.toString` | `brand.allHashTags.${number}._id.id.join` | `brand.allHashTags.${number}._id.id.reverse` | `brand.allHashTags.${number}._id.id.sort` | `brand.allHashTags.${number}._id.id.every` | `brand.allHashTags.${number}._id.id.some` | `brand.allHashTags.${number}._id.id.forEach` | `brand.allHashTags.${number}._id.id.map` | `brand.allHashTags.${number}._id.id.filter` | `brand.allHashTags.${number}._id.id.reduce` | `brand.allHashTags.${number}._id.id.reduceRight` | `brand.allHashTags.${number}._id.id.find` | `brand.allHashTags.${number}._id.id.findIndex` | `brand.allHashTags.${number}._id.id.fill` | `brand.allHashTags.${number}._id.id.copyWithin` | `brand.allHashTags.${number}._id.id.entries` | `brand.allHashTags.${number}._id.id.keys` | `brand.allHashTags.${number}._id.id.values` | `brand.allHashTags.${number}._id.id.findLast` | `brand.allHashTags.${number}._id.id.findLastIndex` | `brand.allHashTags.${number}._id.id.toReversed` | `brand.allHashTags.${number}._id.id.toSorted` | `brand.allHashTags.${number}._id.id.with` | `brand.allHashTags.${number}._id.id.set` | `brand.allHashTags.${number}._id.id.toJSON` | `brand.allHashTags.${number}._id.id.valueOf` | `brand.allHashTags.${number}._id.id.equals` | `brand.allHashTags.${number}._id.id.write` | `brand.allHashTags.${number}._id.id.compare` | `brand.allHashTags.${number}._id.id.copy` | `brand.allHashTags.${number}._id.id.subarray` | `brand.allHashTags.${number}._id.id.writeBigInt64BE` | `brand.allHashTags.${number}._id.id.writeBigInt64LE` | `brand.allHashTags.${number}._id.id.writeBigUInt64BE` | `brand.allHashTags.${number}._id.id.writeBigUint64BE` | `brand.allHashTags.${number}._id.id.writeBigUInt64LE` | `brand.allHashTags.${number}._id.id.writeBigUint64LE` | `brand.allHashTags.${number}._id.id.writeUIntLE` | `brand.allHashTags.${number}._id.id.writeUintLE` | `brand.allHashTags.${number}._id.id.writeUIntBE` | `brand.allHashTags.${number}._id.id.writeUintBE` | `brand.allHashTags.${number}._id.id.writeIntLE` | `brand.allHashTags.${number}._id.id.writeIntBE` | `brand.allHashTags.${number}._id.id.readBigUInt64BE` | `brand.allHashTags.${number}._id.id.readBigUint64BE` | `brand.allHashTags.${number}._id.id.readBigUInt64LE` | `brand.allHashTags.${number}._id.id.readBigUint64LE` | `brand.allHashTags.${number}._id.id.readBigInt64BE` | `brand.allHashTags.${number}._id.id.readBigInt64LE` | `brand.allHashTags.${number}._id.id.readUIntLE` | `brand.allHashTags.${number}._id.id.readUintLE` | `brand.allHashTags.${number}._id.id.readUIntBE` | `brand.allHashTags.${number}._id.id.readUintBE` | `brand.allHashTags.${number}._id.id.readIntLE` | `brand.allHashTags.${number}._id.id.readIntBE` | `brand.allHashTags.${number}._id.id.readUInt8` | `brand.allHashTags.${number}._id.id.readUint8` | `brand.allHashTags.${number}._id.id.readUInt16LE` | `brand.allHashTags.${number}._id.id.readUint16LE` | `brand.allHashTags.${number}._id.id.readUInt16BE` | `brand.allHashTags.${number}._id.id.readUint16BE` | `brand.allHashTags.${number}._id.id.readUInt32LE` | `brand.allHashTags.${number}._id.id.readUint32LE` | `brand.allHashTags.${number}._id.id.readUInt32BE` | `brand.allHashTags.${number}._id.id.readUint32BE` | `brand.allHashTags.${number}._id.id.readInt8` | `brand.allHashTags.${number}._id.id.readInt16LE` | `brand.allHashTags.${number}._id.id.readInt16BE` | `brand.allHashTags.${number}._id.id.readInt32LE` | `brand.allHashTags.${number}._id.id.readInt32BE` | `brand.allHashTags.${number}._id.id.readFloatLE` | `brand.allHashTags.${number}._id.id.readFloatBE` | `brand.allHashTags.${number}._id.id.readDoubleLE` | `brand.allHashTags.${number}._id.id.readDoubleBE` | `brand.allHashTags.${number}._id.id.swap16` | `brand.allHashTags.${number}._id.id.swap32` | `brand.allHashTags.${number}._id.id.swap64` | `brand.allHashTags.${number}._id.id.writeUInt8` | `brand.allHashTags.${number}._id.id.writeUint8` | `brand.allHashTags.${number}._id.id.writeUInt16LE` | `brand.allHashTags.${number}._id.id.writeUint16LE` | `brand.allHashTags.${number}._id.id.writeUInt16BE` | `brand.allHashTags.${number}._id.id.writeUint16BE` | `brand.allHashTags.${number}._id.id.writeUInt32LE` | `brand.allHashTags.${number}._id.id.writeUint32LE` | `brand.allHashTags.${number}._id.id.writeUInt32BE` | `brand.allHashTags.${number}._id.id.writeUint32BE` | `brand.allHashTags.${number}._id.id.writeInt8` | `brand.allHashTags.${number}._id.id.writeInt16LE` | `brand.allHashTags.${number}._id.id.writeInt16BE` | `brand.allHashTags.${number}._id.id.writeInt32LE` | `brand.allHashTags.${number}._id.id.writeInt32BE` | `brand.allHashTags.${number}._id.id.writeFloatLE` | `brand.allHashTags.${number}._id.id.writeFloatBE` | `brand.allHashTags.${number}._id.id.writeDoubleLE` | `brand.allHashTags.${number}._id.id.writeDoubleBE` | `brand.allHashTags.${number}._id.id.BYTES_PER_ELEMENT` | `brand.allHashTags.${number}._id.id.buffer` | `brand.allHashTags.${number}._id.id.byteLength` | `brand.allHashTags.${number}._id.id.byteOffset` | `brand.allHashTags.${number}._id.id.buffer.slice` | `brand.allHashTags.${number}._id.id.buffer.byteLength` | `brand.allHashTags.${number}.usage` | `brand.allHashTags.${number}.maxCount` | `brand.allHashTags.${number}.mostRecent` | `brand.allHashTags.${number}.usage.concat` | `brand.allHashTags.${number}.usage.indexOf` | `brand.allHashTags.${number}.usage.lastIndexOf` | `brand.allHashTags.${number}.usage.slice` | `brand.allHashTags.${number}.usage.length` | `brand.allHashTags.${number}.usage.includes` | `brand.allHashTags.${number}.usage.at` | `brand.allHashTags.${number}.usage.toLocaleString` | `brand.allHashTags.${number}.usage.toString` | `brand.allHashTags.${number}.usage.pop` | `brand.allHashTags.${number}.usage.push` | `brand.allHashTags.${number}.usage.join` | `brand.allHashTags.${number}.usage.shift` | `brand.allHashTags.${number}.usage.splice` | `brand.allHashTags.${number}.usage.unshift` | `brand.allHashTags.${number}.usage.every` | `brand.allHashTags.${number}.usage.some` | `brand.allHashTags.${number}.usage.forEach` | `brand.allHashTags.${number}.usage.map` | `brand.allHashTags.${number}.usage.filter` | `brand.allHashTags.${number}.usage.reduce` | `brand.allHashTags.${number}.usage.reduceRight` | `brand.allHashTags.${number}.usage.find` | `brand.allHashTags.${number}.usage.findIndex` | `brand.allHashTags.${number}.usage.entries` | `brand.allHashTags.${number}.usage.keys` | `brand.allHashTags.${number}.usage.values` | `brand.allHashTags.${number}.usage.flatMap` | `brand.allHashTags.${number}.usage.flat` | `brand.allHashTags.${number}.usage.type` | `brand.allHashTags.${number}.usage.isValid` | `brand.allHashTags.${number}.usage.toJSON` | `brand.allHashTags.${number}.usage.addListener` | `brand.allHashTags.${number}.usage.removeListener` | `brand.allHashTags.${number}.usage.removeAllListeners` | `brand.allHashTags.${number}.usage.optional` | `brand.allHashTags.${number}.usage.description` | `brand.allHashTags.${number}.usage.min` | `brand.allHashTags.${number}.usage.max` | `brand.allHashTags.${number}.usage.remove` | `brand.allHashTags.${number}.usage.move` | `brand.allHashTags.${number}.usage.swap` | `brand.allHashTags.${number}.usage.isEmpty` | `brand.allHashTags.${number}.usage.sum` | `brand.allHashTags.${number}.usage.avg` | `brand.allHashTags.${number}.usage.filtered` | `brand.allHashTags.${number}.usage.sorted` | `brand.allHashTags.${number}.usage.snapshot` | "brand.folder" | "brand.mercariBrand.name" | "brand.mercariBrand._id" | "brand.mercariBrand.hashTags" | "brand.mercariBrand.customItemFields" | "brand.mercariBrand._id.toString" | "brand.mercariBrand._id.id" | "brand.mercariBrand._id.toJSON" | "brand.mercariBrand._id._bsontype" | "brand.mercariBrand._id.generationTime" | "brand.mercariBrand._id.toHexString" | "brand.mercariBrand._id.equals" | "brand.mercariBrand._id.getTimestamp" | "brand.mercariBrand._id.inspect" | "brand.mercariBrand._id.id.indexOf" | "brand.mercariBrand._id.id.lastIndexOf" | "brand.mercariBrand._id.id.slice" | "brand.mercariBrand._id.id.length" | "brand.mercariBrand._id.id.includes" | "brand.mercariBrand._id.id.at" | "brand.mercariBrand._id.id.toLocaleString" | "brand.mercariBrand._id.id.toString" | "brand.mercariBrand._id.id.join" | "brand.mercariBrand._id.id.reverse" | "brand.mercariBrand._id.id.sort" | "brand.mercariBrand._id.id.every" | "brand.mercariBrand._id.id.some" | "brand.mercariBrand._id.id.forEach" | "brand.mercariBrand._id.id.map" | "brand.mercariBrand._id.id.filter" | "brand.mercariBrand._id.id.reduce" | "brand.mercariBrand._id.id.reduceRight" | "brand.mercariBrand._id.id.find" | "brand.mercariBrand._id.id.findIndex" | "brand.mercariBrand._id.id.fill" | "brand.mercariBrand._id.id.copyWithin" | "brand.mercariBrand._id.id.entries" | "brand.mercariBrand._id.id.keys" | "brand.mercariBrand._id.id.values" | "brand.mercariBrand._id.id.findLast" | "brand.mercariBrand._id.id.findLastIndex" | "brand.mercariBrand._id.id.toReversed" | "brand.mercariBrand._id.id.toSorted" | "brand.mercariBrand._id.id.with" | "brand.mercariBrand._id.id.set" | "brand.mercariBrand._id.id.toJSON" | "brand.mercariBrand._id.id.valueOf" | "brand.mercariBrand._id.id.equals" | "brand.mercariBrand._id.id.write" | "brand.mercariBrand._id.id.compare" | "brand.mercariBrand._id.id.copy" | "brand.mercariBrand._id.id.subarray" | "brand.mercariBrand._id.id.writeBigInt64BE" | "brand.mercariBrand._id.id.writeBigInt64LE" | "brand.mercariBrand._id.id.writeBigUInt64BE" | "brand.mercariBrand._id.id.writeBigUint64BE" | "brand.mercariBrand._id.id.writeBigUInt64LE" | "brand.mercariBrand._id.id.writeBigUint64LE" | "brand.mercariBrand._id.id.writeUIntLE" | "brand.mercariBrand._id.id.writeUintLE" | "brand.mercariBrand._id.id.writeUIntBE" | "brand.mercariBrand._id.id.writeUintBE" | "brand.mercariBrand._id.id.writeIntLE" | "brand.mercariBrand._id.id.writeIntBE" | "brand.mercariBrand._id.id.readBigUInt64BE" | "brand.mercariBrand._id.id.readBigUint64BE" | "brand.mercariBrand._id.id.readBigUInt64LE" | "brand.mercariBrand._id.id.readBigUint64LE" | "brand.mercariBrand._id.id.readBigInt64BE" | "brand.mercariBrand._id.id.readBigInt64LE" | "brand.mercariBrand._id.id.readUIntLE" | "brand.mercariBrand._id.id.readUintLE" | "brand.mercariBrand._id.id.readUIntBE" | "brand.mercariBrand._id.id.readUintBE" | "brand.mercariBrand._id.id.readIntLE" | "brand.mercariBrand._id.id.readIntBE" | "brand.mercariBrand._id.id.readUInt8" | "brand.mercariBrand._id.id.readUint8" | "brand.mercariBrand._id.id.readUInt16LE" | "brand.mercariBrand._id.id.readUint16LE" | "brand.mercariBrand._id.id.readUInt16BE" | "brand.mercariBrand._id.id.readUint16BE" | "brand.mercariBrand._id.id.readUInt32LE" | "brand.mercariBrand._id.id.readUint32LE" | "brand.mercariBrand._id.id.readUInt32BE" | "brand.mercariBrand._id.id.readUint32BE" | "brand.mercariBrand._id.id.readInt8" | "brand.mercariBrand._id.id.readInt16LE" | "brand.mercariBrand._id.id.readInt16BE" | "brand.mercariBrand._id.id.readInt32LE" | "brand.mercariBrand._id.id.readInt32BE" | "brand.mercariBrand._id.id.readFloatLE" | "brand.mercariBrand._id.id.readFloatBE" | "brand.mercariBrand._id.id.readDoubleLE" | "brand.mercariBrand._id.id.readDoubleBE" | "brand.mercariBrand._id.id.swap16" | "brand.mercariBrand._id.id.swap32" | "brand.mercariBrand._id.id.swap64" | "brand.mercariBrand._id.id.writeUInt8" | "brand.mercariBrand._id.id.writeUint8" | "brand.mercariBrand._id.id.writeUInt16LE" | "brand.mercariBrand._id.id.writeUint16LE" | "brand.mercariBrand._id.id.writeUInt16BE" | "brand.mercariBrand._id.id.writeUint16BE" | "brand.mercariBrand._id.id.writeUInt32LE" | "brand.mercariBrand._id.id.writeUint32LE" | "brand.mercariBrand._id.id.writeUInt32BE" | "brand.mercariBrand._id.id.writeUint32BE" | "brand.mercariBrand._id.id.writeInt8" | "brand.mercariBrand._id.id.writeInt16LE" | "brand.mercariBrand._id.id.writeInt16BE" | "brand.mercariBrand._id.id.writeInt32LE" | "brand.mercariBrand._id.id.writeInt32BE" | "brand.mercariBrand._id.id.writeFloatLE" | "brand.mercariBrand._id.id.writeFloatBE" | "brand.mercariBrand._id.id.writeDoubleLE" | "brand.mercariBrand._id.id.writeDoubleBE" | "brand.mercariBrand._id.id.BYTES_PER_ELEMENT" | "brand.mercariBrand._id.id.buffer" | "brand.mercariBrand._id.id.byteLength" | "brand.mercariBrand._id.id.byteOffset" | "brand.mercariBrand._id.id.buffer.slice" | "brand.mercariBrand._id.id.buffer.byteLength" | "brand.mercariBrand.hashTags.concat" | "brand.mercariBrand.hashTags.indexOf" | "brand.mercariBrand.hashTags.lastIndexOf" | "brand.mercariBrand.hashTags.slice" | "brand.mercariBrand.hashTags.length" | "brand.mercariBrand.hashTags.includes" | "brand.mercariBrand.hashTags.at" | "brand.mercariBrand.hashTags.toLocaleString" | "brand.mercariBrand.hashTags.toString" | "brand.mercariBrand.hashTags.pop" | "brand.mercariBrand.hashTags.push" | "brand.mercariBrand.hashTags.join" | "brand.mercariBrand.hashTags.shift" | "brand.mercariBrand.hashTags.splice" | "brand.mercariBrand.hashTags.unshift" | "brand.mercariBrand.hashTags.every" | "brand.mercariBrand.hashTags.some" | "brand.mercariBrand.hashTags.forEach" | "brand.mercariBrand.hashTags.map" | "brand.mercariBrand.hashTags.filter" | "brand.mercariBrand.hashTags.reduce" | "brand.mercariBrand.hashTags.reduceRight" | "brand.mercariBrand.hashTags.find" | "brand.mercariBrand.hashTags.findIndex" | "brand.mercariBrand.hashTags.entries" | "brand.mercariBrand.hashTags.keys" | "brand.mercariBrand.hashTags.values" | "brand.mercariBrand.hashTags.flatMap" | "brand.mercariBrand.hashTags.flat" | "brand.mercariBrand.hashTags.type" | "brand.mercariBrand.hashTags.isValid" | "brand.mercariBrand.hashTags.toJSON" | "brand.mercariBrand.hashTags.addListener" | "brand.mercariBrand.hashTags.removeListener" | "brand.mercariBrand.hashTags.removeAllListeners" | "brand.mercariBrand.hashTags.optional" | "brand.mercariBrand.hashTags.description" | "brand.mercariBrand.hashTags.min" | "brand.mercariBrand.hashTags.max" | "brand.mercariBrand.hashTags.remove" | "brand.mercariBrand.hashTags.move" | "brand.mercariBrand.hashTags.swap" | "brand.mercariBrand.hashTags.isEmpty" | "brand.mercariBrand.hashTags.sum" | "brand.mercariBrand.hashTags.avg" | "brand.mercariBrand.hashTags.filtered" | "brand.mercariBrand.hashTags.sorted" | "brand.mercariBrand.hashTags.snapshot" | "brand.mercariBrand.timestamp" | "brand.mercariBrand.customItemFields.concat" | "brand.mercariBrand.customItemFields.indexOf" | "brand.mercariBrand.customItemFields.lastIndexOf" | "brand.mercariBrand.customItemFields.slice" | "brand.mercariBrand.customItemFields.length" | "brand.mercariBrand.customItemFields.includes" | "brand.mercariBrand.customItemFields.at" | "brand.mercariBrand.customItemFields.toLocaleString" | "brand.mercariBrand.customItemFields.toString" | "brand.mercariBrand.customItemFields.pop" | "brand.mercariBrand.customItemFields.push" | "brand.mercariBrand.customItemFields.join" | "brand.mercariBrand.customItemFields.shift" | "brand.mercariBrand.customItemFields.splice" | "brand.mercariBrand.customItemFields.unshift" | "brand.mercariBrand.customItemFields.every" | "brand.mercariBrand.customItemFields.some" | "brand.mercariBrand.customItemFields.forEach" | "brand.mercariBrand.customItemFields.map" | "brand.mercariBrand.customItemFields.filter" | "brand.mercariBrand.customItemFields.reduce" | "brand.mercariBrand.customItemFields.reduceRight" | "brand.mercariBrand.customItemFields.find" | "brand.mercariBrand.customItemFields.findIndex" | "brand.mercariBrand.customItemFields.entries" | "brand.mercariBrand.customItemFields.keys" | "brand.mercariBrand.customItemFields.values" | "brand.mercariBrand.customItemFields.flatMap" | "brand.mercariBrand.customItemFields.flat" | "brand.mercariBrand.customItemFields.type" | "brand.mercariBrand.customItemFields.isValid" | "brand.mercariBrand.customItemFields.toJSON" | "brand.mercariBrand.customItemFields.addListener" | "brand.mercariBrand.customItemFields.removeListener" | "brand.mercariBrand.customItemFields.removeAllListeners" | "brand.mercariBrand.customItemFields.optional" | "brand.mercariBrand.customItemFields.description" | "brand.mercariBrand.customItemFields.min" | "brand.mercariBrand.customItemFields.max" | "brand.mercariBrand.customItemFields.remove" | "brand.mercariBrand.customItemFields.move" | "brand.mercariBrand.customItemFields.swap" | "brand.mercariBrand.customItemFields.isEmpty" | "brand.mercariBrand.customItemFields.sum" | "brand.mercariBrand.customItemFields.avg" | "brand.mercariBrand.customItemFields.filtered" | "brand.mercariBrand.customItemFields.sorted" | "brand.mercariBrand.customItemFields.snapshot" | "capacity.value" | "capacity.uom" | "classifier.name" | "classifier.type" | "classifier._id" | "classifier.shortName" | "classifier.hashTags" | "classifier.allHashTags" | "classifier.detailTypes" | "classifier.allAttributes" | "classifier.taxonomy" | "classifier.parent" | "classifier.attributes" | "classifier.subRows" | "classifier._id.toString" | "classifier._id.id" | "classifier._id.toJSON" | "classifier._id._bsontype" | "classifier._id.generationTime" | "classifier._id.toHexString" | "classifier._id.equals" | "classifier._id.getTimestamp" | "classifier._id.inspect" | "classifier._id.id.indexOf" | "classifier._id.id.lastIndexOf" | "classifier._id.id.slice" | "classifier._id.id.length" | "classifier._id.id.includes" | "classifier._id.id.at" | "classifier._id.id.toLocaleString" | "classifier._id.id.toString" | "classifier._id.id.join" | "classifier._id.id.reverse" | "classifier._id.id.sort" | "classifier._id.id.every" | "classifier._id.id.some" | "classifier._id.id.forEach" | "classifier._id.id.map" | "classifier._id.id.filter" | "classifier._id.id.reduce" | "classifier._id.id.reduceRight" | "classifier._id.id.find" | "classifier._id.id.findIndex" | "classifier._id.id.fill" | "classifier._id.id.copyWithin" | "classifier._id.id.entries" | "classifier._id.id.keys" | "classifier._id.id.values" | "classifier._id.id.findLast" | "classifier._id.id.findLastIndex" | "classifier._id.id.toReversed" | "classifier._id.id.toSorted" | "classifier._id.id.with" | "classifier._id.id.set" | "classifier._id.id.toJSON" | "classifier._id.id.valueOf" | "classifier._id.id.equals" | "classifier._id.id.write" | "classifier._id.id.compare" | "classifier._id.id.copy" | "classifier._id.id.subarray" | "classifier._id.id.writeBigInt64BE" | "classifier._id.id.writeBigInt64LE" | "classifier._id.id.writeBigUInt64BE" | "classifier._id.id.writeBigUint64BE" | "classifier._id.id.writeBigUInt64LE" | "classifier._id.id.writeBigUint64LE" | "classifier._id.id.writeUIntLE" | "classifier._id.id.writeUintLE" | "classifier._id.id.writeUIntBE" | "classifier._id.id.writeUintBE" | "classifier._id.id.writeIntLE" | "classifier._id.id.writeIntBE" | "classifier._id.id.readBigUInt64BE" | "classifier._id.id.readBigUint64BE" | "classifier._id.id.readBigUInt64LE" | "classifier._id.id.readBigUint64LE" | "classifier._id.id.readBigInt64BE" | "classifier._id.id.readBigInt64LE" | "classifier._id.id.readUIntLE" | "classifier._id.id.readUintLE" | "classifier._id.id.readUIntBE" | "classifier._id.id.readUintBE" | "classifier._id.id.readIntLE" | "classifier._id.id.readIntBE" | "classifier._id.id.readUInt8" | "classifier._id.id.readUint8" | "classifier._id.id.readUInt16LE" | "classifier._id.id.readUint16LE" | "classifier._id.id.readUInt16BE" | "classifier._id.id.readUint16BE" | "classifier._id.id.readUInt32LE" | "classifier._id.id.readUint32LE" | "classifier._id.id.readUInt32BE" | "classifier._id.id.readUint32BE" | "classifier._id.id.readInt8" | "classifier._id.id.readInt16LE" | "classifier._id.id.readInt16BE" | "classifier._id.id.readInt32LE" | "classifier._id.id.readInt32BE" | "classifier._id.id.readFloatLE" | "classifier._id.id.readFloatBE" | "classifier._id.id.readDoubleLE" | "classifier._id.id.readDoubleBE" | "classifier._id.id.swap16" | "classifier._id.id.swap32" | "classifier._id.id.swap64" | "classifier._id.id.writeUInt8" | "classifier._id.id.writeUint8" | "classifier._id.id.writeUInt16LE" | "classifier._id.id.writeUint16LE" | "classifier._id.id.writeUInt16BE" | "classifier._id.id.writeUint16BE" | "classifier._id.id.writeUInt32LE" | "classifier._id.id.writeUint32LE" | "classifier._id.id.writeUInt32BE" | "classifier._id.id.writeUint32BE" | "classifier._id.id.writeInt8" | "classifier._id.id.writeInt16LE" | "classifier._id.id.writeInt16BE" | "classifier._id.id.writeInt32LE" | "classifier._id.id.writeInt32BE" | "classifier._id.id.writeFloatLE" | "classifier._id.id.writeFloatBE" | "classifier._id.id.writeDoubleLE" | "classifier._id.id.writeDoubleBE" | "classifier._id.id.BYTES_PER_ELEMENT" | "classifier._id.id.buffer" | "classifier._id.id.byteLength" | "classifier._id.id.byteOffset" | "classifier._id.id.buffer.slice" | "classifier._id.id.buffer.byteLength" | "classifier.hashTags.concat" | "classifier.hashTags.indexOf" | "classifier.hashTags.lastIndexOf" | "classifier.hashTags.slice" | "classifier.hashTags.length" | "classifier.hashTags.includes" | "classifier.hashTags.at" | "classifier.hashTags.toLocaleString" | "classifier.hashTags.toString" | "classifier.hashTags.pop" | "classifier.hashTags.push" | "classifier.hashTags.join" | "classifier.hashTags.shift" | "classifier.hashTags.splice" | "classifier.hashTags.unshift" | "classifier.hashTags.every" | "classifier.hashTags.some" | "classifier.hashTags.forEach" | "classifier.hashTags.map" | "classifier.hashTags.filter" | "classifier.hashTags.reduce" | "classifier.hashTags.reduceRight" | "classifier.hashTags.find" | "classifier.hashTags.findIndex" | "classifier.hashTags.entries" | "classifier.hashTags.keys" | "classifier.hashTags.values" | "classifier.hashTags.flatMap" | "classifier.hashTags.flat" | "classifier.hashTags.type" | "classifier.hashTags.isValid" | "classifier.hashTags.toJSON" | "classifier.hashTags.addListener" | "classifier.hashTags.removeListener" | "classifier.hashTags.removeAllListeners" | "classifier.hashTags.optional" | "classifier.hashTags.description" | "classifier.hashTags.min" | "classifier.hashTags.max" | "classifier.hashTags.remove" | "classifier.hashTags.move" | "classifier.hashTags.swap" | "classifier.hashTags.isEmpty" | "classifier.hashTags.sum" | "classifier.hashTags.avg" | "classifier.hashTags.filtered" | "classifier.hashTags.sorted" | "classifier.hashTags.snapshot" | `classifier.allHashTags.${number}` | `classifier.allHashTags.${number}.name` | `classifier.allHashTags.${number}._id` | `classifier.allHashTags.${number}._id.toString` | `classifier.allHashTags.${number}._id.id` | `classifier.allHashTags.${number}._id.toJSON` | `classifier.allHashTags.${number}._id._bsontype` | `classifier.allHashTags.${number}._id.generationTime` | `classifier.allHashTags.${number}._id.toHexString` | `classifier.allHashTags.${number}._id.equals` | `classifier.allHashTags.${number}._id.getTimestamp` | `classifier.allHashTags.${number}._id.inspect` | `classifier.allHashTags.${number}._id.id.indexOf` | `classifier.allHashTags.${number}._id.id.lastIndexOf` | `classifier.allHashTags.${number}._id.id.slice` | `classifier.allHashTags.${number}._id.id.length` | `classifier.allHashTags.${number}._id.id.includes` | `classifier.allHashTags.${number}._id.id.at` | `classifier.allHashTags.${number}._id.id.toLocaleString` | `classifier.allHashTags.${number}._id.id.toString` | `classifier.allHashTags.${number}._id.id.join` | `classifier.allHashTags.${number}._id.id.reverse` | `classifier.allHashTags.${number}._id.id.sort` | `classifier.allHashTags.${number}._id.id.every` | `classifier.allHashTags.${number}._id.id.some` | `classifier.allHashTags.${number}._id.id.forEach` | `classifier.allHashTags.${number}._id.id.map` | `classifier.allHashTags.${number}._id.id.filter` | `classifier.allHashTags.${number}._id.id.reduce` | `classifier.allHashTags.${number}._id.id.reduceRight` | `classifier.allHashTags.${number}._id.id.find` | `classifier.allHashTags.${number}._id.id.findIndex` | `classifier.allHashTags.${number}._id.id.fill` | `classifier.allHashTags.${number}._id.id.copyWithin` | `classifier.allHashTags.${number}._id.id.entries` | `classifier.allHashTags.${number}._id.id.keys` | `classifier.allHashTags.${number}._id.id.values` | `classifier.allHashTags.${number}._id.id.findLast` | `classifier.allHashTags.${number}._id.id.findLastIndex` | `classifier.allHashTags.${number}._id.id.toReversed` | `classifier.allHashTags.${number}._id.id.toSorted` | `classifier.allHashTags.${number}._id.id.with` | `classifier.allHashTags.${number}._id.id.set` | `classifier.allHashTags.${number}._id.id.toJSON` | `classifier.allHashTags.${number}._id.id.valueOf` | `classifier.allHashTags.${number}._id.id.equals` | `classifier.allHashTags.${number}._id.id.write` | `classifier.allHashTags.${number}._id.id.compare` | `classifier.allHashTags.${number}._id.id.copy` | `classifier.allHashTags.${number}._id.id.subarray` | `classifier.allHashTags.${number}._id.id.writeBigInt64BE` | `classifier.allHashTags.${number}._id.id.writeBigInt64LE` | `classifier.allHashTags.${number}._id.id.writeBigUInt64BE` | `classifier.allHashTags.${number}._id.id.writeBigUint64BE` | `classifier.allHashTags.${number}._id.id.writeBigUInt64LE` | `classifier.allHashTags.${number}._id.id.writeBigUint64LE` | `classifier.allHashTags.${number}._id.id.writeUIntLE` | `classifier.allHashTags.${number}._id.id.writeUintLE` | `classifier.allHashTags.${number}._id.id.writeUIntBE` | `classifier.allHashTags.${number}._id.id.writeUintBE` | `classifier.allHashTags.${number}._id.id.writeIntLE` | `classifier.allHashTags.${number}._id.id.writeIntBE` | `classifier.allHashTags.${number}._id.id.readBigUInt64BE` | `classifier.allHashTags.${number}._id.id.readBigUint64BE` | `classifier.allHashTags.${number}._id.id.readBigUInt64LE` | `classifier.allHashTags.${number}._id.id.readBigUint64LE` | `classifier.allHashTags.${number}._id.id.readBigInt64BE` | `classifier.allHashTags.${number}._id.id.readBigInt64LE` | `classifier.allHashTags.${number}._id.id.readUIntLE` | `classifier.allHashTags.${number}._id.id.readUintLE` | `classifier.allHashTags.${number}._id.id.readUIntBE` | `classifier.allHashTags.${number}._id.id.readUintBE` | `classifier.allHashTags.${number}._id.id.readIntLE` | `classifier.allHashTags.${number}._id.id.readIntBE` | `classifier.allHashTags.${number}._id.id.readUInt8` | `classifier.allHashTags.${number}._id.id.readUint8` | `classifier.allHashTags.${number}._id.id.readUInt16LE` | `classifier.allHashTags.${number}._id.id.readUint16LE` | `classifier.allHashTags.${number}._id.id.readUInt16BE` | `classifier.allHashTags.${number}._id.id.readUint16BE` | `classifier.allHashTags.${number}._id.id.readUInt32LE` | `classifier.allHashTags.${number}._id.id.readUint32LE` | `classifier.allHashTags.${number}._id.id.readUInt32BE` | `classifier.allHashTags.${number}._id.id.readUint32BE` | `classifier.allHashTags.${number}._id.id.readInt8` | `classifier.allHashTags.${number}._id.id.readInt16LE` | `classifier.allHashTags.${number}._id.id.readInt16BE` | `classifier.allHashTags.${number}._id.id.readInt32LE` | `classifier.allHashTags.${number}._id.id.readInt32BE` | `classifier.allHashTags.${number}._id.id.readFloatLE` | `classifier.allHashTags.${number}._id.id.readFloatBE` | `classifier.allHashTags.${number}._id.id.readDoubleLE` | `classifier.allHashTags.${number}._id.id.readDoubleBE` | `classifier.allHashTags.${number}._id.id.swap16` | `classifier.allHashTags.${number}._id.id.swap32` | `classifier.allHashTags.${number}._id.id.swap64` | `classifier.allHashTags.${number}._id.id.writeUInt8` | `classifier.allHashTags.${number}._id.id.writeUint8` | `classifier.allHashTags.${number}._id.id.writeUInt16LE` | `classifier.allHashTags.${number}._id.id.writeUint16LE` | `classifier.allHashTags.${number}._id.id.writeUInt16BE` | `classifier.allHashTags.${number}._id.id.writeUint16BE` | `classifier.allHashTags.${number}._id.id.writeUInt32LE` | `classifier.allHashTags.${number}._id.id.writeUint32LE` | `classifier.allHashTags.${number}._id.id.writeUInt32BE` | `classifier.allHashTags.${number}._id.id.writeUint32BE` | `classifier.allHashTags.${number}._id.id.writeInt8` | `classifier.allHashTags.${number}._id.id.writeInt16LE` | `classifier.allHashTags.${number}._id.id.writeInt16BE` | `classifier.allHashTags.${number}._id.id.writeInt32LE` | `classifier.allHashTags.${number}._id.id.writeInt32BE` | `classifier.allHashTags.${number}._id.id.writeFloatLE` | `classifier.allHashTags.${number}._id.id.writeFloatBE` | `classifier.allHashTags.${number}._id.id.writeDoubleLE` | `classifier.allHashTags.${number}._id.id.writeDoubleBE` | `classifier.allHashTags.${number}._id.id.BYTES_PER_ELEMENT` | `classifier.allHashTags.${number}._id.id.buffer` | `classifier.allHashTags.${number}._id.id.byteLength` | `classifier.allHashTags.${number}._id.id.byteOffset` | `classifier.allHashTags.${number}._id.id.buffer.slice` | `classifier.allHashTags.${number}._id.id.buffer.byteLength` | `classifier.allHashTags.${number}.usage` | `classifier.allHashTags.${number}.maxCount` | `classifier.allHashTags.${number}.mostRecent` | `classifier.allHashTags.${number}.usage.concat` | `classifier.allHashTags.${number}.usage.indexOf` | `classifier.allHashTags.${number}.usage.lastIndexOf` | `classifier.allHashTags.${number}.usage.slice` | `classifier.allHashTags.${number}.usage.length` | `classifier.allHashTags.${number}.usage.includes` | `classifier.allHashTags.${number}.usage.at` | `classifier.allHashTags.${number}.usage.toLocaleString` | `classifier.allHashTags.${number}.usage.toString` | `classifier.allHashTags.${number}.usage.pop` | `classifier.allHashTags.${number}.usage.push` | `classifier.allHashTags.${number}.usage.join` | `classifier.allHashTags.${number}.usage.shift` | `classifier.allHashTags.${number}.usage.splice` | `classifier.allHashTags.${number}.usage.unshift` | `classifier.allHashTags.${number}.usage.every` | `classifier.allHashTags.${number}.usage.some` | `classifier.allHashTags.${number}.usage.forEach` | `classifier.allHashTags.${number}.usage.map` | `classifier.allHashTags.${number}.usage.filter` | `classifier.allHashTags.${number}.usage.reduce` | `classifier.allHashTags.${number}.usage.reduceRight` | `classifier.allHashTags.${number}.usage.find` | `classifier.allHashTags.${number}.usage.findIndex` | `classifier.allHashTags.${number}.usage.entries` | `classifier.allHashTags.${number}.usage.keys` | `classifier.allHashTags.${number}.usage.values` | `classifier.allHashTags.${number}.usage.flatMap` | `classifier.allHashTags.${number}.usage.flat` | `classifier.allHashTags.${number}.usage.type` | `classifier.allHashTags.${number}.usage.isValid` | `classifier.allHashTags.${number}.usage.toJSON` | `classifier.allHashTags.${number}.usage.addListener` | `classifier.allHashTags.${number}.usage.removeListener` | `classifier.allHashTags.${number}.usage.removeAllListeners` | `classifier.allHashTags.${number}.usage.optional` | `classifier.allHashTags.${number}.usage.description` | `classifier.allHashTags.${number}.usage.min` | `classifier.allHashTags.${number}.usage.max` | `classifier.allHashTags.${number}.usage.remove` | `classifier.allHashTags.${number}.usage.move` | `classifier.allHashTags.${number}.usage.swap` | `classifier.allHashTags.${number}.usage.isEmpty` | `classifier.allHashTags.${number}.usage.sum` | `classifier.allHashTags.${number}.usage.avg` | `classifier.allHashTags.${number}.usage.filtered` | `classifier.allHashTags.${number}.usage.sorted` | `classifier.allHashTags.${number}.usage.snapshot` | "classifier.type.concat" | "classifier.type.indexOf" | "classifier.type.lastIndexOf" | "classifier.type.slice" | "classifier.type.length" | "classifier.type.includes" | "classifier.type.at" | "classifier.type.toLocaleString" | "classifier.type.toString" | "classifier.type.pop" | "classifier.type.push" | "classifier.type.join" | "classifier.type.shift" | "classifier.type.splice" | "classifier.type.unshift" | "classifier.type.every" | "classifier.type.some" | "classifier.type.forEach" | "classifier.type.map" | "classifier.type.filter" | "classifier.type.reduce" | "classifier.type.reduceRight" | "classifier.type.find" | "classifier.type.findIndex" | "classifier.type.entries" | "classifier.type.keys" | "classifier.type.values" | "classifier.type.flatMap" | "classifier.type.flat" | "classifier.type.type" | "classifier.type.isValid" | "classifier.type.toJSON" | "classifier.type.addListener" | "classifier.type.removeListener" | "classifier.type.removeAllListeners" | "classifier.type.optional" | "classifier.type.description" | "classifier.type.min" | "classifier.type.max" | "classifier.type.remove" | "classifier.type.move" | "classifier.type.swap" | "classifier.type.isEmpty" | "classifier.type.sum" | "classifier.type.avg" | "classifier.type.filtered" | "classifier.type.sorted" | "classifier.type.snapshot" | `classifier.detailTypes.${number}` | `classifier.allAttributes.${number}` | `classifier.allAttributes.${number}.path` | `classifier.allAttributes.${number}.value` | `classifier.allAttributes.${number}.unset` | "classifier.taxonomy._id" | "classifier.taxonomy.hashTags" | "classifier.taxonomy.allHashTags" | "classifier.taxonomy.customItemField" | "classifier.taxonomy._id.toString" | "classifier.taxonomy._id.id" | "classifier.taxonomy._id.toJSON" | "classifier.taxonomy._id._bsontype" | "classifier.taxonomy._id.generationTime" | "classifier.taxonomy._id.toHexString" | "classifier.taxonomy._id.equals" | "classifier.taxonomy._id.getTimestamp" | "classifier.taxonomy._id.inspect" | "classifier.taxonomy._id.id.indexOf" | "classifier.taxonomy._id.id.lastIndexOf" | "classifier.taxonomy._id.id.slice" | "classifier.taxonomy._id.id.length" | "classifier.taxonomy._id.id.includes" | "classifier.taxonomy._id.id.at" | "classifier.taxonomy._id.id.toLocaleString" | "classifier.taxonomy._id.id.toString" | "classifier.taxonomy._id.id.join" | "classifier.taxonomy._id.id.reverse" | "classifier.taxonomy._id.id.sort" | "classifier.taxonomy._id.id.every" | "classifier.taxonomy._id.id.some" | "classifier.taxonomy._id.id.forEach" | "classifier.taxonomy._id.id.map" | "classifier.taxonomy._id.id.filter" | "classifier.taxonomy._id.id.reduce" | "classifier.taxonomy._id.id.reduceRight" | "classifier.taxonomy._id.id.find" | "classifier.taxonomy._id.id.findIndex" | "classifier.taxonomy._id.id.fill" | "classifier.taxonomy._id.id.copyWithin" | "classifier.taxonomy._id.id.entries" | "classifier.taxonomy._id.id.keys" | "classifier.taxonomy._id.id.values" | "classifier.taxonomy._id.id.findLast" | "classifier.taxonomy._id.id.findLastIndex" | "classifier.taxonomy._id.id.toReversed" | "classifier.taxonomy._id.id.toSorted" | "classifier.taxonomy._id.id.with" | "classifier.taxonomy._id.id.set" | "classifier.taxonomy._id.id.toJSON" | "classifier.taxonomy._id.id.valueOf" | "classifier.taxonomy._id.id.equals" | "classifier.taxonomy._id.id.write" | "classifier.taxonomy._id.id.compare" | "classifier.taxonomy._id.id.copy" | "classifier.taxonomy._id.id.subarray" | "classifier.taxonomy._id.id.writeBigInt64BE" | "classifier.taxonomy._id.id.writeBigInt64LE" | "classifier.taxonomy._id.id.writeBigUInt64BE" | "classifier.taxonomy._id.id.writeBigUint64BE" | "classifier.taxonomy._id.id.writeBigUInt64LE" | "classifier.taxonomy._id.id.writeBigUint64LE" | "classifier.taxonomy._id.id.writeUIntLE" | "classifier.taxonomy._id.id.writeUintLE" | "classifier.taxonomy._id.id.writeUIntBE" | "classifier.taxonomy._id.id.writeUintBE" | "classifier.taxonomy._id.id.writeIntLE" | "classifier.taxonomy._id.id.writeIntBE" | "classifier.taxonomy._id.id.readBigUInt64BE" | "classifier.taxonomy._id.id.readBigUint64BE" | "classifier.taxonomy._id.id.readBigUInt64LE" | "classifier.taxonomy._id.id.readBigUint64LE" | "classifier.taxonomy._id.id.readBigInt64BE" | "classifier.taxonomy._id.id.readBigInt64LE" | "classifier.taxonomy._id.id.readUIntLE" | "classifier.taxonomy._id.id.readUintLE" | "classifier.taxonomy._id.id.readUIntBE" | "classifier.taxonomy._id.id.readUintBE" | "classifier.taxonomy._id.id.readIntLE" | "classifier.taxonomy._id.id.readIntBE" | "classifier.taxonomy._id.id.readUInt8" | "classifier.taxonomy._id.id.readUint8" | "classifier.taxonomy._id.id.readUInt16LE" | "classifier.taxonomy._id.id.readUint16LE" | "classifier.taxonomy._id.id.readUInt16BE" | "classifier.taxonomy._id.id.readUint16BE" | "classifier.taxonomy._id.id.readUInt32LE" | "classifier.taxonomy._id.id.readUint32LE" | "classifier.taxonomy._id.id.readUInt32BE" | "classifier.taxonomy._id.id.readUint32BE" | "classifier.taxonomy._id.id.readInt8" | "classifier.taxonomy._id.id.readInt16LE" | "classifier.taxonomy._id.id.readInt16BE" | "classifier.taxonomy._id.id.readInt32LE" | "classifier.taxonomy._id.id.readInt32BE" | "classifier.taxonomy._id.id.readFloatLE" | "classifier.taxonomy._id.id.readFloatBE" | "classifier.taxonomy._id.id.readDoubleLE" | "classifier.taxonomy._id.id.readDoubleBE" | "classifier.taxonomy._id.id.swap16" | "classifier.taxonomy._id.id.swap32" | "classifier.taxonomy._id.id.swap64" | "classifier.taxonomy._id.id.writeUInt8" | "classifier.taxonomy._id.id.writeUint8" | "classifier.taxonomy._id.id.writeUInt16LE" | "classifier.taxonomy._id.id.writeUint16LE" | "classifier.taxonomy._id.id.writeUInt16BE" | "classifier.taxonomy._id.id.writeUint16BE" | "classifier.taxonomy._id.id.writeUInt32LE" | "classifier.taxonomy._id.id.writeUint32LE" | "classifier.taxonomy._id.id.writeUInt32BE" | "classifier.taxonomy._id.id.writeUint32BE" | "classifier.taxonomy._id.id.writeInt8" | "classifier.taxonomy._id.id.writeInt16LE" | "classifier.taxonomy._id.id.writeInt16BE" | "classifier.taxonomy._id.id.writeInt32LE" | "classifier.taxonomy._id.id.writeInt32BE" | "classifier.taxonomy._id.id.writeFloatLE" | "classifier.taxonomy._id.id.writeFloatBE" | "classifier.taxonomy._id.id.writeDoubleLE" | "classifier.taxonomy._id.id.writeDoubleBE" | "classifier.taxonomy._id.id.BYTES_PER_ELEMENT" | "classifier.taxonomy._id.id.buffer" | "classifier.taxonomy._id.id.byteLength" | "classifier.taxonomy._id.id.byteOffset" | "classifier.taxonomy._id.id.buffer.slice" | "classifier.taxonomy._id.id.buffer.byteLength" | "classifier.taxonomy.hashTags.concat" | "classifier.taxonomy.hashTags.indexOf" | "classifier.taxonomy.hashTags.lastIndexOf" | "classifier.taxonomy.hashTags.slice" | "classifier.taxonomy.hashTags.length" | "classifier.taxonomy.hashTags.includes" | "classifier.taxonomy.hashTags.at" | "classifier.taxonomy.hashTags.toLocaleString" | "classifier.taxonomy.hashTags.toString" | "classifier.taxonomy.hashTags.pop" | "classifier.taxonomy.hashTags.push" | "classifier.taxonomy.hashTags.join" | "classifier.taxonomy.hashTags.shift" | "classifier.taxonomy.hashTags.splice" | "classifier.taxonomy.hashTags.unshift" | "classifier.taxonomy.hashTags.every" | "classifier.taxonomy.hashTags.some" | "classifier.taxonomy.hashTags.forEach" | "classifier.taxonomy.hashTags.map" | "classifier.taxonomy.hashTags.filter" | "classifier.taxonomy.hashTags.reduce" | "classifier.taxonomy.hashTags.reduceRight" | "classifier.taxonomy.hashTags.find" | "classifier.taxonomy.hashTags.findIndex" | "classifier.taxonomy.hashTags.entries" | "classifier.taxonomy.hashTags.keys" | "classifier.taxonomy.hashTags.values" | "classifier.taxonomy.hashTags.flatMap" | "classifier.taxonomy.hashTags.flat" | "classifier.taxonomy.hashTags.type" | "classifier.taxonomy.hashTags.isValid" | "classifier.taxonomy.hashTags.toJSON" | "classifier.taxonomy.hashTags.addListener" | "classifier.taxonomy.hashTags.removeListener" | "classifier.taxonomy.hashTags.removeAllListeners" | "classifier.taxonomy.hashTags.optional" | "classifier.taxonomy.hashTags.description" | "classifier.taxonomy.hashTags.min" | "classifier.taxonomy.hashTags.max" | "classifier.taxonomy.hashTags.remove" | "classifier.taxonomy.hashTags.move" | "classifier.taxonomy.hashTags.swap" | "classifier.taxonomy.hashTags.isEmpty" | "classifier.taxonomy.hashTags.sum" | "classifier.taxonomy.hashTags.avg" | "classifier.taxonomy.hashTags.filtered" | "classifier.taxonomy.hashTags.sorted" | "classifier.taxonomy.hashTags.snapshot" | `classifier.taxonomy.allHashTags.${number}` | `classifier.taxonomy.allHashTags.${number}.name` | `classifier.taxonomy.allHashTags.${number}._id` | `classifier.taxonomy.allHashTags.${number}._id.toString` | `classifier.taxonomy.allHashTags.${number}._id.id` | `classifier.taxonomy.allHashTags.${number}._id.toJSON` | `classifier.taxonomy.allHashTags.${number}._id._bsontype` | `classifier.taxonomy.allHashTags.${number}._id.generationTime` | `classifier.taxonomy.allHashTags.${number}._id.toHexString` | `classifier.taxonomy.allHashTags.${number}._id.equals` | `classifier.taxonomy.allHashTags.${number}._id.getTimestamp` | `classifier.taxonomy.allHashTags.${number}._id.inspect` | `classifier.taxonomy.allHashTags.${number}._id.id.indexOf` | `classifier.taxonomy.allHashTags.${number}._id.id.lastIndexOf` | `classifier.taxonomy.allHashTags.${number}._id.id.slice` | `classifier.taxonomy.allHashTags.${number}._id.id.length` | `classifier.taxonomy.allHashTags.${number}._id.id.includes` | `classifier.taxonomy.allHashTags.${number}._id.id.at` | `classifier.taxonomy.allHashTags.${number}._id.id.toLocaleString` | `classifier.taxonomy.allHashTags.${number}._id.id.toString` | `classifier.taxonomy.allHashTags.${number}._id.id.join` | `classifier.taxonomy.allHashTags.${number}._id.id.reverse` | `classifier.taxonomy.allHashTags.${number}._id.id.sort` | `classifier.taxonomy.allHashTags.${number}._id.id.every` | `classifier.taxonomy.allHashTags.${number}._id.id.some` | `classifier.taxonomy.allHashTags.${number}._id.id.forEach` | `classifier.taxonomy.allHashTags.${number}._id.id.map` | `classifier.taxonomy.allHashTags.${number}._id.id.filter` | `classifier.taxonomy.allHashTags.${number}._id.id.reduce` | `classifier.taxonomy.allHashTags.${number}._id.id.reduceRight` | `classifier.taxonomy.allHashTags.${number}._id.id.find` | `classifier.taxonomy.allHashTags.${number}._id.id.findIndex` | `classifier.taxonomy.allHashTags.${number}._id.id.fill` | `classifier.taxonomy.allHashTags.${number}._id.id.copyWithin` | `classifier.taxonomy.allHashTags.${number}._id.id.entries` | `classifier.taxonomy.allHashTags.${number}._id.id.keys` | `classifier.taxonomy.allHashTags.${number}._id.id.values` | `classifier.taxonomy.allHashTags.${number}._id.id.findLast` | `classifier.taxonomy.allHashTags.${number}._id.id.findLastIndex` | `classifier.taxonomy.allHashTags.${number}._id.id.toReversed` | `classifier.taxonomy.allHashTags.${number}._id.id.toSorted` | `classifier.taxonomy.allHashTags.${number}._id.id.with` | `classifier.taxonomy.allHashTags.${number}._id.id.set` | `classifier.taxonomy.allHashTags.${number}._id.id.toJSON` | `classifier.taxonomy.allHashTags.${number}._id.id.valueOf` | `classifier.taxonomy.allHashTags.${number}._id.id.equals` | `classifier.taxonomy.allHashTags.${number}._id.id.write` | `classifier.taxonomy.allHashTags.${number}._id.id.compare` | `classifier.taxonomy.allHashTags.${number}._id.id.copy` | `classifier.taxonomy.allHashTags.${number}._id.id.subarray` | `classifier.taxonomy.allHashTags.${number}._id.id.writeBigInt64BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeBigInt64LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeBigUInt64BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeBigUint64BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeBigUInt64LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeBigUint64LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUIntLE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUintLE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUIntBE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUintBE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeIntLE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeIntBE` | `classifier.taxonomy.allHashTags.${number}._id.id.readBigUInt64BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readBigUint64BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readBigUInt64LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readBigUint64LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readBigInt64BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readBigInt64LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUIntLE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUintLE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUIntBE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUintBE` | `classifier.taxonomy.allHashTags.${number}._id.id.readIntLE` | `classifier.taxonomy.allHashTags.${number}._id.id.readIntBE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUInt8` | `classifier.taxonomy.allHashTags.${number}._id.id.readUint8` | `classifier.taxonomy.allHashTags.${number}._id.id.readUInt16LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUint16LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUInt16BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUint16BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUInt32LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUint32LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUInt32BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readUint32BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readInt8` | `classifier.taxonomy.allHashTags.${number}._id.id.readInt16LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readInt16BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readInt32LE` | `classifier.taxonomy.allHashTags.${number}._id.id.readInt32BE` | `classifier.taxonomy.allHashTags.${number}._id.id.readFloatLE` | `classifier.taxonomy.allHashTags.${number}._id.id.readFloatBE` | `classifier.taxonomy.allHashTags.${number}._id.id.readDoubleLE` | `classifier.taxonomy.allHashTags.${number}._id.id.readDoubleBE` | `classifier.taxonomy.allHashTags.${number}._id.id.swap16` | `classifier.taxonomy.allHashTags.${number}._id.id.swap32` | `classifier.taxonomy.allHashTags.${number}._id.id.swap64` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUInt8` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUint8` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUInt16LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUint16LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUInt16BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUint16BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUInt32LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUint32LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUInt32BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeUint32BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeInt8` | `classifier.taxonomy.allHashTags.${number}._id.id.writeInt16LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeInt16BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeInt32LE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeInt32BE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeFloatLE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeFloatBE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeDoubleLE` | `classifier.taxonomy.allHashTags.${number}._id.id.writeDoubleBE` | `classifier.taxonomy.allHashTags.${number}._id.id.BYTES_PER_ELEMENT` | `classifier.taxonomy.allHashTags.${number}._id.id.buffer` | `classifier.taxonomy.allHashTags.${number}._id.id.byteLength` | `classifier.taxonomy.allHashTags.${number}._id.id.byteOffset` | `classifier.taxonomy.allHashTags.${number}._id.id.buffer.slice` | `classifier.taxonomy.allHashTags.${number}._id.id.buffer.byteLength` | `classifier.taxonomy.allHashTags.${number}.usage` | `classifier.taxonomy.allHashTags.${number}.maxCount` | `classifier.taxonomy.allHashTags.${number}.mostRecent` | `classifier.taxonomy.allHashTags.${number}.usage.concat` | `classifier.taxonomy.allHashTags.${number}.usage.indexOf` | `classifier.taxonomy.allHashTags.${number}.usage.lastIndexOf` | `classifier.taxonomy.allHashTags.${number}.usage.slice` | `classifier.taxonomy.allHashTags.${number}.usage.length` | `classifier.taxonomy.allHashTags.${number}.usage.includes` | `classifier.taxonomy.allHashTags.${number}.usage.at` | `classifier.taxonomy.allHashTags.${number}.usage.toLocaleString` | `classifier.taxonomy.allHashTags.${number}.usage.toString` | `classifier.taxonomy.allHashTags.${number}.usage.pop` | `classifier.taxonomy.allHashTags.${number}.usage.push` | `classifier.taxonomy.allHashTags.${number}.usage.join` | `classifier.taxonomy.allHashTags.${number}.usage.shift` | `classifier.taxonomy.allHashTags.${number}.usage.splice` | `classifier.taxonomy.allHashTags.${number}.usage.unshift` | `classifier.taxonomy.allHashTags.${number}.usage.every` | `classifier.taxonomy.allHashTags.${number}.usage.some` | `classifier.taxonomy.allHashTags.${number}.usage.forEach` | `classifier.taxonomy.allHashTags.${number}.usage.map` | `classifier.taxonomy.allHashTags.${number}.usage.filter` | `classifier.taxonomy.allHashTags.${number}.usage.reduce` | `classifier.taxonomy.allHashTags.${number}.usage.reduceRight` | `classifier.taxonomy.allHashTags.${number}.usage.find` | `classifier.taxonomy.allHashTags.${number}.usage.findIndex` | `classifier.taxonomy.allHashTags.${number}.usage.entries` | `classifier.taxonomy.allHashTags.${number}.usage.keys` | `classifier.taxonomy.allHashTags.${number}.usage.values` | `classifier.taxonomy.allHashTags.${number}.usage.flatMap` | `classifier.taxonomy.allHashTags.${number}.usage.flat` | `classifier.taxonomy.allHashTags.${number}.usage.type` | `classifier.taxonomy.allHashTags.${number}.usage.isValid` | `classifier.taxonomy.allHashTags.${number}.usage.toJSON` | `classifier.taxonomy.allHashTags.${number}.usage.addListener` | `classifier.taxonomy.allHashTags.${number}.usage.removeListener` | `classifier.taxonomy.allHashTags.${number}.usage.removeAllListeners` | `classifier.taxonomy.allHashTags.${number}.usage.optional` | `classifier.taxonomy.allHashTags.${number}.usage.description` | `classifier.taxonomy.allHashTags.${number}.usage.min` | `classifier.taxonomy.allHashTags.${number}.usage.max` | `classifier.taxonomy.allHashTags.${number}.usage.remove` | `classifier.taxonomy.allHashTags.${number}.usage.move` | `classifier.taxonomy.allHashTags.${number}.usage.swap` | `classifier.taxonomy.allHashTags.${number}.usage.isEmpty` | `classifier.taxonomy.allHashTags.${number}.usage.sum` | `classifier.taxonomy.allHashTags.${number}.usage.avg` | `classifier.taxonomy.allHashTags.${number}.usage.filtered` | `classifier.taxonomy.allHashTags.${number}.usage.sorted` | `classifier.taxonomy.allHashTags.${number}.usage.snapshot` | "classifier.taxonomy.timestamp" | "classifier.taxonomy.category" | "classifier.taxonomy.subCategory" | "classifier.taxonomy.subSubCategory" | "classifier.taxonomy.fullname" | "classifier.taxonomy.sizes" | "classifier.taxonomy.category.name" | "classifier.taxonomy.category.hashTags" | "classifier.taxonomy.category.hashTags.concat" | "classifier.taxonomy.category.hashTags.indexOf" | "classifier.taxonomy.category.hashTags.lastIndexOf" | "classifier.taxonomy.category.hashTags.slice" | "classifier.taxonomy.category.hashTags.length" | "classifier.taxonomy.category.hashTags.includes" | "classifier.taxonomy.category.hashTags.at" | "classifier.taxonomy.category.hashTags.toLocaleString" | "classifier.taxonomy.category.hashTags.toString" | "classifier.taxonomy.category.hashTags.pop" | "classifier.taxonomy.category.hashTags.push" | "classifier.taxonomy.category.hashTags.join" | "classifier.taxonomy.category.hashTags.shift" | "classifier.taxonomy.category.hashTags.splice" | "classifier.taxonomy.category.hashTags.unshift" | "classifier.taxonomy.category.hashTags.every" | "classifier.taxonomy.category.hashTags.some" | "classifier.taxonomy.category.hashTags.forEach" | "classifier.taxonomy.category.hashTags.map" | "classifier.taxonomy.category.hashTags.filter" | "classifier.taxonomy.category.hashTags.reduce" | "classifier.taxonomy.category.hashTags.reduceRight" | "classifier.taxonomy.category.hashTags.find" | "classifier.taxonomy.category.hashTags.findIndex" | "classifier.taxonomy.category.hashTags.entries" | "classifier.taxonomy.category.hashTags.keys" | "classifier.taxonomy.category.hashTags.values" | "classifier.taxonomy.category.hashTags.flatMap" | "classifier.taxonomy.category.hashTags.flat" | "classifier.taxonomy.category.hashTags.type" | "classifier.taxonomy.category.hashTags.isValid" | "classifier.taxonomy.category.hashTags.toJSON" | "classifier.taxonomy.category.hashTags.addListener" | "classifier.taxonomy.category.hashTags.removeListener" | "classifier.taxonomy.category.hashTags.removeAllListeners" | "classifier.taxonomy.category.hashTags.optional" | "classifier.taxonomy.category.hashTags.description" | "classifier.taxonomy.category.hashTags.min" | "classifier.taxonomy.category.hashTags.max" | "classifier.taxonomy.category.hashTags.remove" | "classifier.taxonomy.category.hashTags.move" | "classifier.taxonomy.category.hashTags.swap" | "classifier.taxonomy.category.hashTags.isEmpty" | "classifier.taxonomy.category.hashTags.sum" | "classifier.taxonomy.category.hashTags.avg" | "classifier.taxonomy.category.hashTags.filtered" | "classifier.taxonomy.category.hashTags.sorted" | "classifier.taxonomy.category.hashTags.snapshot" | "classifier.taxonomy.category.selector" | "classifier.taxonomy.subCategory.name" | "classifier.taxonomy.subCategory.hashTags" | "classifier.taxonomy.subCategory.hashTags.concat" | "classifier.taxonomy.subCategory.hashTags.indexOf" | "classifier.taxonomy.subCategory.hashTags.lastIndexOf" | "classifier.taxonomy.subCategory.hashTags.slice" | "classifier.taxonomy.subCategory.hashTags.length" | "classifier.taxonomy.subCategory.hashTags.includes" | "classifier.taxonomy.subCategory.hashTags.at" | "classifier.taxonomy.subCategory.hashTags.toLocaleString" | "classifier.taxonomy.subCategory.hashTags.toString" | "classifier.taxonomy.subCategory.hashTags.pop" | "classifier.taxonomy.subCategory.hashTags.push" | "classifier.taxonomy.subCategory.hashTags.join" | "classifier.taxonomy.subCategory.hashTags.shift" | "classifier.taxonomy.subCategory.hashTags.splice" | "classifier.taxonomy.subCategory.hashTags.unshift" | "classifier.taxonomy.subCategory.hashTags.every" | "classifier.taxonomy.subCategory.hashTags.some" | "classifier.taxonomy.subCategory.hashTags.forEach" | "classifier.taxonomy.subCategory.hashTags.map" | "classifier.taxonomy.subCategory.hashTags.filter" | "classifier.taxonomy.subCategory.hashTags.reduce" | "classifier.taxonomy.subCategory.hashTags.reduceRight" | "classifier.taxonomy.subCategory.hashTags.find" | "classifier.taxonomy.subCategory.hashTags.findIndex" | "classifier.taxonomy.subCategory.hashTags.entries" | "classifier.taxonomy.subCategory.hashTags.keys" | "classifier.taxonomy.subCategory.hashTags.values" | "classifier.taxonomy.subCategory.hashTags.flatMap" | "classifier.taxonomy.subCategory.hashTags.flat" | "classifier.taxonomy.subCategory.hashTags.type" | "classifier.taxonomy.subCategory.hashTags.isValid" | "classifier.taxonomy.subCategory.hashTags.toJSON" | "classifier.taxonomy.subCategory.hashTags.addListener" | "classifier.taxonomy.subCategory.hashTags.removeListener" | "classifier.taxonomy.subCategory.hashTags.removeAllListeners" | "classifier.taxonomy.subCategory.hashTags.optional" | "classifier.taxonomy.subCategory.hashTags.description" | "classifier.taxonomy.subCategory.hashTags.min" | "classifier.taxonomy.subCategory.hashTags.max" | "classifier.taxonomy.subCategory.hashTags.remove" | "classifier.taxonomy.subCategory.hashTags.move" | "classifier.taxonomy.subCategory.hashTags.swap" | "classifier.taxonomy.subCategory.hashTags.isEmpty" | "classifier.taxonomy.subCategory.hashTags.sum" | "classifier.taxonomy.subCategory.hashTags.avg" | "classifier.taxonomy.subCategory.hashTags.filtered" | "classifier.taxonomy.subCategory.hashTags.sorted" | "classifier.taxonomy.subCategory.hashTags.snapshot" | "classifier.taxonomy.subCategory.selector" | "classifier.taxonomy.subSubCategory.name" | "classifier.taxonomy.subSubCategory.hashTags" | "classifier.taxonomy.subSubCategory.hashTags.concat" | "classifier.taxonomy.subSubCategory.hashTags.indexOf" | "classifier.taxonomy.subSubCategory.hashTags.lastIndexOf" | "classifier.taxonomy.subSubCategory.hashTags.slice" | "classifier.taxonomy.subSubCategory.hashTags.length" | "classifier.taxonomy.subSubCategory.hashTags.includes" | "classifier.taxonomy.subSubCategory.hashTags.at" | "classifier.taxonomy.subSubCategory.hashTags.toLocaleString" | "classifier.taxonomy.subSubCategory.hashTags.toString" | "classifier.taxonomy.subSubCategory.hashTags.pop" | "classifier.taxonomy.subSubCategory.hashTags.push" | "classifier.taxonomy.subSubCategory.hashTags.join" | "classifier.taxonomy.subSubCategory.hashTags.shift" | "classifier.taxonomy.subSubCategory.hashTags.splice" | "classifier.taxonomy.subSubCategory.hashTags.unshift" | "classifier.taxonomy.subSubCategory.hashTags.every" | "classifier.taxonomy.subSubCategory.hashTags.some" | "classifier.taxonomy.subSubCategory.hashTags.forEach" | "classifier.taxonomy.subSubCategory.hashTags.map" | "classifier.taxonomy.subSubCategory.hashTags.filter" | "classifier.taxonomy.subSubCategory.hashTags.reduce" | "classifier.taxonomy.subSubCategory.hashTags.reduceRight" | "classifier.taxonomy.subSubCategory.hashTags.find" | "classifier.taxonomy.subSubCategory.hashTags.findIndex" | "classifier.taxonomy.subSubCategory.hashTags.entries" | "classifier.taxonomy.subSubCategory.hashTags.keys" | "classifier.taxonomy.subSubCategory.hashTags.values" | "classifier.taxonomy.subSubCategory.hashTags.flatMap" | "classifier.taxonomy.subSubCategory.hashTags.flat" | "classifier.taxonomy.subSubCategory.hashTags.type" | "classifier.taxonomy.subSubCategory.hashTags.isValid" | "classifier.taxonomy.subSubCategory.hashTags.toJSON" | "classifier.taxonomy.subSubCategory.hashTags.addListener" | "classifier.taxonomy.subSubCategory.hashTags.removeListener" | "classifier.taxonomy.subSubCategory.hashTags.removeAllListeners" | "classifier.taxonomy.subSubCategory.hashTags.optional" | "classifier.taxonomy.subSubCategory.hashTags.description" | "classifier.taxonomy.subSubCategory.hashTags.min" | "classifier.taxonomy.subSubCategory.hashTags.max" | "classifier.taxonomy.subSubCategory.hashTags.remove" | "classifier.taxonomy.subSubCategory.hashTags.move" | "classifier.taxonomy.subSubCategory.hashTags.swap" | "classifier.taxonomy.subSubCategory.hashTags.isEmpty" | "classifier.taxonomy.subSubCategory.hashTags.sum" | "classifier.taxonomy.subSubCategory.hashTags.avg" | "classifier.taxonomy.subSubCategory.hashTags.filtered" | "classifier.taxonomy.subSubCategory.hashTags.sorted" | "classifier.taxonomy.subSubCategory.hashTags.snapshot" | "classifier.taxonomy.subSubCategory.selector" | "classifier.taxonomy.sizes.concat" | "classifier.taxonomy.sizes.indexOf" | "classifier.taxonomy.sizes.lastIndexOf" | "classifier.taxonomy.sizes.slice" | "classifier.taxonomy.sizes.length" | "classifier.taxonomy.sizes.includes" | "classifier.taxonomy.sizes.at" | "classifier.taxonomy.sizes.toLocaleString" | "classifier.taxonomy.sizes.toString" | "classifier.taxonomy.sizes.pop" | "classifier.taxonomy.sizes.push" | "classifier.taxonomy.sizes.join" | "classifier.taxonomy.sizes.shift" | "classifier.taxonomy.sizes.splice" | "classifier.taxonomy.sizes.unshift" | "classifier.taxonomy.sizes.every" | "classifier.taxonomy.sizes.some" | "classifier.taxonomy.sizes.forEach" | "classifier.taxonomy.sizes.map" | "classifier.taxonomy.sizes.filter" | "classifier.taxonomy.sizes.reduce" | "classifier.taxonomy.sizes.reduceRight" | "classifier.taxonomy.sizes.find" | "classifier.taxonomy.sizes.findIndex" | "classifier.taxonomy.sizes.entries" | "classifier.taxonomy.sizes.keys" | "classifier.taxonomy.sizes.values" | "classifier.taxonomy.sizes.flatMap" | "classifier.taxonomy.sizes.flat" | "classifier.taxonomy.sizes.type" | "classifier.taxonomy.sizes.isValid" | "classifier.taxonomy.sizes.toJSON" | "classifier.taxonomy.sizes.addListener" | "classifier.taxonomy.sizes.removeListener" | "classifier.taxonomy.sizes.removeAllListeners" | "classifier.taxonomy.sizes.optional" | "classifier.taxonomy.sizes.description" | "classifier.taxonomy.sizes.min" | "classifier.taxonomy.sizes.max" | "classifier.taxonomy.sizes.remove" | "classifier.taxonomy.sizes.move" | "classifier.taxonomy.sizes.swap" | "classifier.taxonomy.sizes.isEmpty" | "classifier.taxonomy.sizes.sum" | "classifier.taxonomy.sizes.avg" | "classifier.taxonomy.sizes.filtered" | "classifier.taxonomy.sizes.sorted" | "classifier.taxonomy.sizes.snapshot" | "classifier.taxonomy.customItemField.id" | "classifier.taxonomy.customItemField._id" | "classifier.taxonomy.customItemField._id.toString" | "classifier.taxonomy.customItemField._id.id" | "classifier.taxonomy.customItemField._id.toJSON" | "classifier.taxonomy.customItemField._id._bsontype" | "classifier.taxonomy.customItemField._id.generationTime" | "classifier.taxonomy.customItemField._id.toHexString" | "classifier.taxonomy.customItemField._id.equals" | "classifier.taxonomy.customItemField._id.getTimestamp" | "classifier.taxonomy.customItemField._id.inspect" | "classifier.taxonomy.customItemField._id.id.indexOf" | "classifier.taxonomy.customItemField._id.id.lastIndexOf" | "classifier.taxonomy.customItemField._id.id.slice" | "classifier.taxonomy.customItemField._id.id.length" | "classifier.taxonomy.customItemField._id.id.includes" | "classifier.taxonomy.customItemField._id.id.at" | "classifier.taxonomy.customItemField._id.id.toLocaleString" | "classifier.taxonomy.customItemField._id.id.toString" | "classifier.taxonomy.customItemField._id.id.join" | "classifier.taxonomy.customItemField._id.id.reverse" | "classifier.taxonomy.customItemField._id.id.sort" | "classifier.taxonomy.customItemField._id.id.every" | "classifier.taxonomy.customItemField._id.id.some" | "classifier.taxonomy.customItemField._id.id.forEach" | "classifier.taxonomy.customItemField._id.id.map" | "classifier.taxonomy.customItemField._id.id.filter" | "classifier.taxonomy.customItemField._id.id.reduce" | "classifier.taxonomy.customItemField._id.id.reduceRight" | "classifier.taxonomy.customItemField._id.id.find" | "classifier.taxonomy.customItemField._id.id.findIndex" | "classifier.taxonomy.customItemField._id.id.fill" | "classifier.taxonomy.customItemField._id.id.copyWithin" | "classifier.taxonomy.customItemField._id.id.entries" | "classifier.taxonomy.customItemField._id.id.keys" | "classifier.taxonomy.customItemField._id.id.values" | "classifier.taxonomy.customItemField._id.id.findLast" | "classifier.taxonomy.customItemField._id.id.findLastIndex" | "classifier.taxonomy.customItemField._id.id.toReversed" | "classifier.taxonomy.customItemField._id.id.toSorted" | "classifier.taxonomy.customItemField._id.id.with" | "classifier.taxonomy.customItemField._id.id.set" | "classifier.taxonomy.customItemField._id.id.toJSON" | "classifier.taxonomy.customItemField._id.id.valueOf" | "classifier.taxonomy.customItemField._id.id.equals" | "classifier.taxonomy.customItemField._id.id.write" | "classifier.taxonomy.customItemField._id.id.compare" | "classifier.taxonomy.customItemField._id.id.copy" | "classifier.taxonomy.customItemField._id.id.subarray" | "classifier.taxonomy.customItemField._id.id.writeBigInt64BE" | "classifier.taxonomy.customItemField._id.id.writeBigInt64LE" | "classifier.taxonomy.customItemField._id.id.writeBigUInt64BE" | "classifier.taxonomy.customItemField._id.id.writeBigUint64BE" | "classifier.taxonomy.customItemField._id.id.writeBigUInt64LE" | "classifier.taxonomy.customItemField._id.id.writeBigUint64LE" | "classifier.taxonomy.customItemField._id.id.writeUIntLE" | "classifier.taxonomy.customItemField._id.id.writeUintLE" | "classifier.taxonomy.customItemField._id.id.writeUIntBE" | "classifier.taxonomy.customItemField._id.id.writeUintBE" | "classifier.taxonomy.customItemField._id.id.writeIntLE" | "classifier.taxonomy.customItemField._id.id.writeIntBE" | "classifier.taxonomy.customItemField._id.id.readBigUInt64BE" | "classifier.taxonomy.customItemField._id.id.readBigUint64BE" | "classifier.taxonomy.customItemField._id.id.readBigUInt64LE" | "classifier.taxonomy.customItemField._id.id.readBigUint64LE" | "classifier.taxonomy.customItemField._id.id.readBigInt64BE" | "classifier.taxonomy.customItemField._id.id.readBigInt64LE" | "classifier.taxonomy.customItemField._id.id.readUIntLE" | "classifier.taxonomy.customItemField._id.id.readUintLE" | "classifier.taxonomy.customItemField._id.id.readUIntBE" | "classifier.taxonomy.customItemField._id.id.readUintBE" | "classifier.taxonomy.customItemField._id.id.readIntLE" | "classifier.taxonomy.customItemField._id.id.readIntBE" | "classifier.taxonomy.customItemField._id.id.readUInt8" | "classifier.taxonomy.customItemField._id.id.readUint8" | "classifier.taxonomy.customItemField._id.id.readUInt16LE" | "classifier.taxonomy.customItemField._id.id.readUint16LE" | "classifier.taxonomy.customItemField._id.id.readUInt16BE" | "classifier.taxonomy.customItemField._id.id.readUint16BE" | "classifier.taxonomy.customItemField._id.id.readUInt32LE" | "classifier.taxonomy.customItemField._id.id.readUint32LE" | "classifier.taxonomy.customItemField._id.id.readUInt32BE" | "classifier.taxonomy.customItemField._id.id.readUint32BE" | "classifier.taxonomy.customItemField._id.id.readInt8" | "classifier.taxonomy.customItemField._id.id.readInt16LE" | "classifier.taxonomy.customItemField._id.id.readInt16BE" | "classifier.taxonomy.customItemField._id.id.readInt32LE" | "classifier.taxonomy.customItemField._id.id.readInt32BE" | "classifier.taxonomy.customItemField._id.id.readFloatLE" | "classifier.taxonomy.customItemField._id.id.readFloatBE" | "classifier.taxonomy.customItemField._id.id.readDoubleLE" | "classifier.taxonomy.customItemField._id.id.readDoubleBE" | "classifier.taxonomy.customItemField._id.id.swap16" | "classifier.taxonomy.customItemField._id.id.swap32" | "classifier.taxonomy.customItemField._id.id.swap64" | "classifier.taxonomy.customItemField._id.id.writeUInt8" | "classifier.taxonomy.customItemField._id.id.writeUint8" | "classifier.taxonomy.customItemField._id.id.writeUInt16LE" | "classifier.taxonomy.customItemField._id.id.writeUint16LE" | "classifier.taxonomy.customItemField._id.id.writeUInt16BE" | "classifier.taxonomy.customItemField._id.id.writeUint16BE" | "classifier.taxonomy.customItemField._id.id.writeUInt32LE" | "classifier.taxonomy.customItemField._id.id.writeUint32LE" | "classifier.taxonomy.customItemField._id.id.writeUInt32BE" | "classifier.taxonomy.customItemField._id.id.writeUint32BE" | "classifier.taxonomy.customItemField._id.id.writeInt8" | "classifier.taxonomy.customItemField._id.id.writeInt16LE" | "classifier.taxonomy.customItemField._id.id.writeInt16BE" | "classifier.taxonomy.customItemField._id.id.writeInt32LE" | "classifier.taxonomy.customItemField._id.id.writeInt32BE" | "classifier.taxonomy.customItemField._id.id.writeFloatLE" | "classifier.taxonomy.customItemField._id.id.writeFloatBE" | "classifier.taxonomy.customItemField._id.id.writeDoubleLE" | "classifier.taxonomy.customItemField._id.id.writeDoubleBE" | "classifier.taxonomy.customItemField._id.id.BYTES_PER_ELEMENT" | "classifier.taxonomy.customItemField._id.id.buffer" | "classifier.taxonomy.customItemField._id.id.byteLength" | "classifier.taxonomy.customItemField._id.id.byteOffset" | "classifier.taxonomy.customItemField._id.id.buffer.slice" | "classifier.taxonomy.customItemField._id.id.buffer.byteLength" | "classifier.taxonomy.customItemField.linkedType" | "classifier.taxonomy.customItemField.brandsMap" | "classifier.taxonomy.customItemField.getTaxonomy" | `classifier.taxonomy.customItemField.brandsMap.${string}` | "classifier.taxonomy.customItemField.getTaxonomy.concat" | "classifier.taxonomy.customItemField.getTaxonomy.indexOf" | "classifier.taxonomy.customItemField.getTaxonomy.lastIndexOf" | "classifier.taxonomy.customItemField.getTaxonomy.slice" | "classifier.taxonomy.customItemField.getTaxonomy.length" | "classifier.taxonomy.customItemField.getTaxonomy.includes" | "classifier.taxonomy.customItemField.getTaxonomy.at" | "classifier.taxonomy.customItemField.getTaxonomy.toLocaleString" | "classifier.taxonomy.customItemField.getTaxonomy.toString" | "classifier.taxonomy.customItemField.getTaxonomy.join" | "classifier.taxonomy.customItemField.getTaxonomy.every" | "classifier.taxonomy.customItemField.getTaxonomy.some" | "classifier.taxonomy.customItemField.getTaxonomy.forEach" | "classifier.taxonomy.customItemField.getTaxonomy.map" | "classifier.taxonomy.customItemField.getTaxonomy.filter" | "classifier.taxonomy.customItemField.getTaxonomy.reduce" | "classifier.taxonomy.customItemField.getTaxonomy.reduceRight" | "classifier.taxonomy.customItemField.getTaxonomy.find" | "classifier.taxonomy.customItemField.getTaxonomy.findIndex" | "classifier.taxonomy.customItemField.getTaxonomy.entries" | "classifier.taxonomy.customItemField.getTaxonomy.keys" | "classifier.taxonomy.customItemField.getTaxonomy.values" | "classifier.taxonomy.customItemField.getTaxonomy.flatMap" | "classifier.taxonomy.customItemField.getTaxonomy.flat" | "classifier.taxonomy.customItemField.getTaxonomy.type" | "classifier.taxonomy.customItemField.getTaxonomy.isValid" | "classifier.taxonomy.customItemField.getTaxonomy.toJSON" | "classifier.taxonomy.customItemField.getTaxonomy.addListener" | "classifier.taxonomy.customItemField.getTaxonomy.removeListener" | "classifier.taxonomy.customItemField.getTaxonomy.removeAllListeners" | "classifier.taxonomy.customItemField.getTaxonomy.optional" | "classifier.taxonomy.customItemField.getTaxonomy.description" | "classifier.taxonomy.customItemField.getTaxonomy.min" | "classifier.taxonomy.customItemField.getTaxonomy.max" | "classifier.taxonomy.customItemField.getTaxonomy.isEmpty" | "classifier.taxonomy.customItemField.getTaxonomy.sum" | "classifier.taxonomy.customItemField.getTaxonomy.avg" | "classifier.taxonomy.customItemField.getTaxonomy.filtered" | "classifier.taxonomy.customItemField.getTaxonomy.sorted" | "classifier.taxonomy.customItemField.getTaxonomy.snapshot" | "classifier.taxonomy.customItemField.getTaxonomy.update" | "classifier.taxonomy.customItemField.getTaxonomy.subscribe" | "classifier.taxonomy.customItemField.getTaxonomy.unsubscribe" | "classifier.parent.name" | "classifier.parent._id" | "classifier.parent.shortName" | "classifier.parent.hashTags" | "classifier.parent.allHashTags" | "classifier.parent.detailTypes" | "classifier.parent.allAttributes" | "classifier.parent._id.toString" | "classifier.parent._id.id" | "classifier.parent._id.toJSON" | "classifier.parent._id._bsontype" | "classifier.parent._id.generationTime" | "classifier.parent._id.toHexString" | "classifier.parent._id.equals" | "classifier.parent._id.getTimestamp" | "classifier.parent._id.inspect" | "classifier.parent._id.id.indexOf" | "classifier.parent._id.id.lastIndexOf" | "classifier.parent._id.id.slice" | "classifier.parent._id.id.length" | "classifier.parent._id.id.includes" | "classifier.parent._id.id.at" | "classifier.parent._id.id.toLocaleString" | "classifier.parent._id.id.toString" | "classifier.parent._id.id.join" | "classifier.parent._id.id.reverse" | "classifier.parent._id.id.sort" | "classifier.parent._id.id.every" | "classifier.parent._id.id.some" | "classifier.parent._id.id.forEach" | "classifier.parent._id.id.map" | "classifier.parent._id.id.filter" | "classifier.parent._id.id.reduce" | "classifier.parent._id.id.reduceRight" | "classifier.parent._id.id.find" | "classifier.parent._id.id.findIndex" | "classifier.parent._id.id.fill" | "classifier.parent._id.id.copyWithin" | "classifier.parent._id.id.entries" | "classifier.parent._id.id.keys" | "classifier.parent._id.id.values" | "classifier.parent._id.id.findLast" | "classifier.parent._id.id.findLastIndex" | "classifier.parent._id.id.toReversed" | "classifier.parent._id.id.toSorted" | "classifier.parent._id.id.with" | "classifier.parent._id.id.set" | "classifier.parent._id.id.toJSON" | "classifier.parent._id.id.valueOf" | "classifier.parent._id.id.equals" | "classifier.parent._id.id.write" | "classifier.parent._id.id.compare" | "classifier.parent._id.id.copy" | "classifier.parent._id.id.subarray" | "classifier.parent._id.id.writeBigInt64BE" | "classifier.parent._id.id.writeBigInt64LE" | "classifier.parent._id.id.writeBigUInt64BE" | "classifier.parent._id.id.writeBigUint64BE" | "classifier.parent._id.id.writeBigUInt64LE" | "classifier.parent._id.id.writeBigUint64LE" | "classifier.parent._id.id.writeUIntLE" | "classifier.parent._id.id.writeUintLE" | "classifier.parent._id.id.writeUIntBE" | "classifier.parent._id.id.writeUintBE" | "classifier.parent._id.id.writeIntLE" | "classifier.parent._id.id.writeIntBE" | "classifier.parent._id.id.readBigUInt64BE" | "classifier.parent._id.id.readBigUint64BE" | "classifier.parent._id.id.readBigUInt64LE" | "classifier.parent._id.id.readBigUint64LE" | "classifier.parent._id.id.readBigInt64BE" | "classifier.parent._id.id.readBigInt64LE" | "classifier.parent._id.id.readUIntLE" | "classifier.parent._id.id.readUintLE" | "classifier.parent._id.id.readUIntBE" | "classifier.parent._id.id.readUintBE" | "classifier.parent._id.id.readIntLE" | "classifier.parent._id.id.readIntBE" | "classifier.parent._id.id.readUInt8" | "classifier.parent._id.id.readUint8" | "classifier.parent._id.id.readUInt16LE" | "classifier.parent._id.id.readUint16LE" | "classifier.parent._id.id.readUInt16BE" | "classifier.parent._id.id.readUint16BE" | "classifier.parent._id.id.readUInt32LE" | "classifier.parent._id.id.readUint32LE" | "classifier.parent._id.id.readUInt32BE" | "classifier.parent._id.id.readUint32BE" | "classifier.parent._id.id.readInt8" | "classifier.parent._id.id.readInt16LE" | "classifier.parent._id.id.readInt16BE" | "classifier.parent._id.id.readInt32LE" | "classifier.parent._id.id.readInt32BE" | "classifier.parent._id.id.readFloatLE" | "classifier.parent._id.id.readFloatBE" | "classifier.parent._id.id.readDoubleLE" | "classifier.parent._id.id.readDoubleBE" | "classifier.parent._id.id.swap16" | "classifier.parent._id.id.swap32" | "classifier.parent._id.id.swap64" | "classifier.parent._id.id.writeUInt8" | "classifier.parent._id.id.writeUint8" | "classifier.parent._id.id.writeUInt16LE" | "classifier.parent._id.id.writeUint16LE" | "classifier.parent._id.id.writeUInt16BE" | "classifier.parent._id.id.writeUint16BE" | "classifier.parent._id.id.writeUInt32LE" | "classifier.parent._id.id.writeUint32LE" | "classifier.parent._id.id.writeUInt32BE" | "classifier.parent._id.id.writeUint32BE" | "classifier.parent._id.id.writeInt8" | "classifier.parent._id.id.writeInt16LE" | "classifier.parent._id.id.writeInt16BE" | "classifier.parent._id.id.writeInt32LE" | "classifier.parent._id.id.writeInt32BE" | "classifier.parent._id.id.writeFloatLE" | "classifier.parent._id.id.writeFloatBE" | "classifier.parent._id.id.writeDoubleLE" | "classifier.parent._id.id.writeDoubleBE" | "classifier.parent._id.id.BYTES_PER_ELEMENT" | "classifier.parent._id.id.buffer" | "classifier.parent._id.id.byteLength" | "classifier.parent._id.id.byteOffset" | "classifier.parent._id.id.buffer.slice" | "classifier.parent._id.id.buffer.byteLength" | "classifier.parent.hashTags.concat" | "classifier.parent.hashTags.indexOf" | "classifier.parent.hashTags.lastIndexOf" | "classifier.parent.hashTags.slice" | "classifier.parent.hashTags.length" | "classifier.parent.hashTags.includes" | "classifier.parent.hashTags.at" | "classifier.parent.hashTags.toLocaleString" | "classifier.parent.hashTags.toString" | "classifier.parent.hashTags.pop" | "classifier.parent.hashTags.push" | "classifier.parent.hashTags.join" | "classifier.parent.hashTags.shift" | "classifier.parent.hashTags.splice" | "classifier.parent.hashTags.unshift" | "classifier.parent.hashTags.every" | "classifier.parent.hashTags.some" | "classifier.parent.hashTags.forEach" | "classifier.parent.hashTags.map" | "classifier.parent.hashTags.filter" | "classifier.parent.hashTags.reduce" | "classifier.parent.hashTags.reduceRight" | "classifier.parent.hashTags.find" | "classifier.parent.hashTags.findIndex" | "classifier.parent.hashTags.entries" | "classifier.parent.hashTags.keys" | "classifier.parent.hashTags.values" | "classifier.parent.hashTags.flatMap" | "classifier.parent.hashTags.flat" | "classifier.parent.hashTags.type" | "classifier.parent.hashTags.isValid" | "classifier.parent.hashTags.toJSON" | "classifier.parent.hashTags.addListener" | "classifier.parent.hashTags.removeListener" | "classifier.parent.hashTags.removeAllListeners" | "classifier.parent.hashTags.optional" | "classifier.parent.hashTags.description" | "classifier.parent.hashTags.min" | "classifier.parent.hashTags.max" | "classifier.parent.hashTags.remove" | "classifier.parent.hashTags.move" | "classifier.parent.hashTags.swap" | "classifier.parent.hashTags.isEmpty" | "classifier.parent.hashTags.sum" | "classifier.parent.hashTags.avg" | "classifier.parent.hashTags.filtered" | "classifier.parent.hashTags.sorted" | "classifier.parent.hashTags.snapshot" | `classifier.parent.allHashTags.${number}` | `classifier.parent.allHashTags.${number}.name` | `classifier.parent.allHashTags.${number}._id` | `classifier.parent.allHashTags.${number}._id.toString` | `classifier.parent.allHashTags.${number}._id.id` | `classifier.parent.allHashTags.${number}._id.toJSON` | `classifier.parent.allHashTags.${number}._id._bsontype` | `classifier.parent.allHashTags.${number}._id.generationTime` | `classifier.parent.allHashTags.${number}._id.toHexString` | `classifier.parent.allHashTags.${number}._id.equals` | `classifier.parent.allHashTags.${number}._id.getTimestamp` | `classifier.parent.allHashTags.${number}._id.inspect` | `classifier.parent.allHashTags.${number}._id.id.indexOf` | `classifier.parent.allHashTags.${number}._id.id.lastIndexOf` | `classifier.parent.allHashTags.${number}._id.id.slice` | `classifier.parent.allHashTags.${number}._id.id.length` | `classifier.parent.allHashTags.${number}._id.id.includes` | `classifier.parent.allHashTags.${number}._id.id.at` | `classifier.parent.allHashTags.${number}._id.id.toLocaleString` | `classifier.parent.allHashTags.${number}._id.id.toString` | `classifier.parent.allHashTags.${number}._id.id.join` | `classifier.parent.allHashTags.${number}._id.id.reverse` | `classifier.parent.allHashTags.${number}._id.id.sort` | `classifier.parent.allHashTags.${number}._id.id.every` | `classifier.parent.allHashTags.${number}._id.id.some` | `classifier.parent.allHashTags.${number}._id.id.forEach` | `classifier.parent.allHashTags.${number}._id.id.map` | `classifier.parent.allHashTags.${number}._id.id.filter` | `classifier.parent.allHashTags.${number}._id.id.reduce` | `classifier.parent.allHashTags.${number}._id.id.reduceRight` | `classifier.parent.allHashTags.${number}._id.id.find` | `classifier.parent.allHashTags.${number}._id.id.findIndex` | `classifier.parent.allHashTags.${number}._id.id.fill` | `classifier.parent.allHashTags.${number}._id.id.copyWithin` | `classifier.parent.allHashTags.${number}._id.id.entries` | `classifier.parent.allHashTags.${number}._id.id.keys` | `classifier.parent.allHashTags.${number}._id.id.values` | `classifier.parent.allHashTags.${number}._id.id.findLast` | `classifier.parent.allHashTags.${number}._id.id.findLastIndex` | `classifier.parent.allHashTags.${number}._id.id.toReversed` | `classifier.parent.allHashTags.${number}._id.id.toSorted` | `classifier.parent.allHashTags.${number}._id.id.with` | `classifier.parent.allHashTags.${number}._id.id.set` | `classifier.parent.allHashTags.${number}._id.id.toJSON` | `classifier.parent.allHashTags.${number}._id.id.valueOf` | `classifier.parent.allHashTags.${number}._id.id.equals` | `classifier.parent.allHashTags.${number}._id.id.write` | `classifier.parent.allHashTags.${number}._id.id.compare` | `classifier.parent.allHashTags.${number}._id.id.copy` | `classifier.parent.allHashTags.${number}._id.id.subarray` | `classifier.parent.allHashTags.${number}._id.id.writeBigInt64BE` | `classifier.parent.allHashTags.${number}._id.id.writeBigInt64LE` | `classifier.parent.allHashTags.${number}._id.id.writeBigUInt64BE` | `classifier.parent.allHashTags.${number}._id.id.writeBigUint64BE` | `classifier.parent.allHashTags.${number}._id.id.writeBigUInt64LE` | `classifier.parent.allHashTags.${number}._id.id.writeBigUint64LE` | `classifier.parent.allHashTags.${number}._id.id.writeUIntLE` | `classifier.parent.allHashTags.${number}._id.id.writeUintLE` | `classifier.parent.allHashTags.${number}._id.id.writeUIntBE` | `classifier.parent.allHashTags.${number}._id.id.writeUintBE` | `classifier.parent.allHashTags.${number}._id.id.writeIntLE` | `classifier.parent.allHashTags.${number}._id.id.writeIntBE` | `classifier.parent.allHashTags.${number}._id.id.readBigUInt64BE` | `classifier.parent.allHashTags.${number}._id.id.readBigUint64BE` | `classifier.parent.allHashTags.${number}._id.id.readBigUInt64LE` | `classifier.parent.allHashTags.${number}._id.id.readBigUint64LE` | `classifier.parent.allHashTags.${number}._id.id.readBigInt64BE` | `classifier.parent.allHashTags.${number}._id.id.readBigInt64LE` | `classifier.parent.allHashTags.${number}._id.id.readUIntLE` | `classifier.parent.allHashTags.${number}._id.id.readUintLE` | `classifier.parent.allHashTags.${number}._id.id.readUIntBE` | `classifier.parent.allHashTags.${number}._id.id.readUintBE` | `classifier.parent.allHashTags.${number}._id.id.readIntLE` | `classifier.parent.allHashTags.${number}._id.id.readIntBE` | `classifier.parent.allHashTags.${number}._id.id.readUInt8` | `classifier.parent.allHashTags.${number}._id.id.readUint8` | `classifier.parent.allHashTags.${number}._id.id.readUInt16LE` | `classifier.parent.allHashTags.${number}._id.id.readUint16LE` | `classifier.parent.allHashTags.${number}._id.id.readUInt16BE` | `classifier.parent.allHashTags.${number}._id.id.readUint16BE` | `classifier.parent.allHashTags.${number}._id.id.readUInt32LE` | `classifier.parent.allHashTags.${number}._id.id.readUint32LE` | `classifier.parent.allHashTags.${number}._id.id.readUInt32BE` | `classifier.parent.allHashTags.${number}._id.id.readUint32BE` | `classifier.parent.allHashTags.${number}._id.id.readInt8` | `classifier.parent.allHashTags.${number}._id.id.readInt16LE` | `classifier.parent.allHashTags.${number}._id.id.readInt16BE` | `classifier.parent.allHashTags.${number}._id.id.readInt32LE` | `classifier.parent.allHashTags.${number}._id.id.readInt32BE` | `classifier.parent.allHashTags.${number}._id.id.readFloatLE` | `classifier.parent.allHashTags.${number}._id.id.readFloatBE` | `classifier.parent.allHashTags.${number}._id.id.readDoubleLE` | `classifier.parent.allHashTags.${number}._id.id.readDoubleBE` | `classifier.parent.allHashTags.${number}._id.id.swap16` | `classifier.parent.allHashTags.${number}._id.id.swap32` | `classifier.parent.allHashTags.${number}._id.id.swap64` | `classifier.parent.allHashTags.${number}._id.id.writeUInt8` | `classifier.parent.allHashTags.${number}._id.id.writeUint8` | `classifier.parent.allHashTags.${number}._id.id.writeUInt16LE` | `classifier.parent.allHashTags.${number}._id.id.writeUint16LE` | `classifier.parent.allHashTags.${number}._id.id.writeUInt16BE` | `classifier.parent.allHashTags.${number}._id.id.writeUint16BE` | `classifier.parent.allHashTags.${number}._id.id.writeUInt32LE` | `classifier.parent.allHashTags.${number}._id.id.writeUint32LE` | `classifier.parent.allHashTags.${number}._id.id.writeUInt32BE` | `classifier.parent.allHashTags.${number}._id.id.writeUint32BE` | `classifier.parent.allHashTags.${number}._id.id.writeInt8` | `classifier.parent.allHashTags.${number}._id.id.writeInt16LE` | `classifier.parent.allHashTags.${number}._id.id.writeInt16BE` | `classifier.parent.allHashTags.${number}._id.id.writeInt32LE` | `classifier.parent.allHashTags.${number}._id.id.writeInt32BE` | `classifier.parent.allHashTags.${number}._id.id.writeFloatLE` | `classifier.parent.allHashTags.${number}._id.id.writeFloatBE` | `classifier.parent.allHashTags.${number}._id.id.writeDoubleLE` | `classifier.parent.allHashTags.${number}._id.id.writeDoubleBE` | `classifier.parent.allHashTags.${number}._id.id.BYTES_PER_ELEMENT` | `classifier.parent.allHashTags.${number}._id.id.buffer` | `classifier.parent.allHashTags.${number}._id.id.byteLength` | `classifier.parent.allHashTags.${number}._id.id.byteOffset` | `classifier.parent.allHashTags.${number}._id.id.buffer.slice` | `classifier.parent.allHashTags.${number}._id.id.buffer.byteLength` | `classifier.parent.allHashTags.${number}.usage` | `classifier.parent.allHashTags.${number}.maxCount` | `classifier.parent.allHashTags.${number}.mostRecent` | `classifier.parent.allHashTags.${number}.usage.concat` | `classifier.parent.allHashTags.${number}.usage.indexOf` | `classifier.parent.allHashTags.${number}.usage.lastIndexOf` | `classifier.parent.allHashTags.${number}.usage.slice` | `classifier.parent.allHashTags.${number}.usage.length` | `classifier.parent.allHashTags.${number}.usage.includes` | `classifier.parent.allHashTags.${number}.usage.at` | `classifier.parent.allHashTags.${number}.usage.toLocaleString` | `classifier.parent.allHashTags.${number}.usage.toString` | `classifier.parent.allHashTags.${number}.usage.pop` | `classifier.parent.allHashTags.${number}.usage.push` | `classifier.parent.allHashTags.${number}.usage.join` | `classifier.parent.allHashTags.${number}.usage.shift` | `classifier.parent.allHashTags.${number}.usage.splice` | `classifier.parent.allHashTags.${number}.usage.unshift` | `classifier.parent.allHashTags.${number}.usage.every` | `classifier.parent.allHashTags.${number}.usage.some` | `classifier.parent.allHashTags.${number}.usage.forEach` | `classifier.parent.allHashTags.${number}.usage.map` | `classifier.parent.allHashTags.${number}.usage.filter` | `classifier.parent.allHashTags.${number}.usage.reduce` | `classifier.parent.allHashTags.${number}.usage.reduceRight` | `classifier.parent.allHashTags.${number}.usage.find` | `classifier.parent.allHashTags.${number}.usage.findIndex` | `classifier.parent.allHashTags.${number}.usage.entries` | `classifier.parent.allHashTags.${number}.usage.keys` | `classifier.parent.allHashTags.${number}.usage.values` | `classifier.parent.allHashTags.${number}.usage.flatMap` | `classifier.parent.allHashTags.${number}.usage.flat` | `classifier.parent.allHashTags.${number}.usage.type` | `classifier.parent.allHashTags.${number}.usage.isValid` | `classifier.parent.allHashTags.${number}.usage.toJSON` | `classifier.parent.allHashTags.${number}.usage.addListener` | `classifier.parent.allHashTags.${number}.usage.removeListener` | `classifier.parent.allHashTags.${number}.usage.removeAllListeners` | `classifier.parent.allHashTags.${number}.usage.optional` | `classifier.parent.allHashTags.${number}.usage.description` | `classifier.parent.allHashTags.${number}.usage.min` | `classifier.parent.allHashTags.${number}.usage.max` | `classifier.parent.allHashTags.${number}.usage.remove` | `classifier.parent.allHashTags.${number}.usage.move` | `classifier.parent.allHashTags.${number}.usage.swap` | `classifier.parent.allHashTags.${number}.usage.isEmpty` | `classifier.parent.allHashTags.${number}.usage.sum` | `classifier.parent.allHashTags.${number}.usage.avg` | `classifier.parent.allHashTags.${number}.usage.filtered` | `classifier.parent.allHashTags.${number}.usage.sorted` | `classifier.parent.allHashTags.${number}.usage.snapshot` | `classifier.parent.detailTypes.${number}` | `classifier.parent.allAttributes.${number}` | `classifier.parent.allAttributes.${number}.path` | `classifier.parent.allAttributes.${number}.value` | `classifier.parent.allAttributes.${number}.unset` | "classifier.attributes.concat" | "classifier.attributes.indexOf" | "classifier.attributes.lastIndexOf" | "classifier.attributes.slice" | "classifier.attributes.length" | "classifier.attributes.includes" | "classifier.attributes.at" | "classifier.attributes.toLocaleString" | "classifier.attributes.toString" | "classifier.attributes.pop" | "classifier.attributes.push" | "classifier.attributes.join" | "classifier.attributes.shift" | "classifier.attributes.splice" | "classifier.attributes.unshift" | "classifier.attributes.every" | "classifier.attributes.some" | "classifier.attributes.forEach" | "classifier.attributes.map" | "classifier.attributes.filter" | "classifier.attributes.reduce" | "classifier.attributes.reduceRight" | "classifier.attributes.find" | "classifier.attributes.findIndex" | "classifier.attributes.entries" | "classifier.attributes.keys" | "classifier.attributes.values" | "classifier.attributes.flatMap" | "classifier.attributes.flat" | "classifier.attributes.type" | "classifier.attributes.isValid" | "classifier.attributes.toJSON" | "classifier.attributes.addListener" | "classifier.attributes.removeListener" | "classifier.attributes.removeAllListeners" | "classifier.attributes.optional" | "classifier.attributes.description" | "classifier.attributes.min" | "classifier.attributes.max" | "classifier.attributes.remove" | "classifier.attributes.move" | "classifier.attributes.swap" | "classifier.attributes.isEmpty" | "classifier.attributes.sum" | "classifier.attributes.avg" | "classifier.attributes.filtered" | "classifier.attributes.sorted" | "classifier.attributes.snapshot" | "classifier.subRows.concat" | "classifier.subRows.indexOf" | "classifier.subRows.lastIndexOf" | "classifier.subRows.slice" | "classifier.subRows.length" | "classifier.subRows.includes" | "classifier.subRows.at" | "classifier.subRows.toLocaleString" | "classifier.subRows.toString" | "classifier.subRows.join" | "classifier.subRows.every" | "classifier.subRows.some" | "classifier.subRows.forEach" | "classifier.subRows.map" | "classifier.subRows.filter" | "classifier.subRows.reduce" | "classifier.subRows.reduceRight" | "classifier.subRows.find" | "classifier.subRows.findIndex" | "classifier.subRows.entries" | "classifier.subRows.keys" | "classifier.subRows.values" | "classifier.subRows.flatMap" | "classifier.subRows.flat" | "classifier.subRows.type" | "classifier.subRows.isValid" | "classifier.subRows.toJSON" | "classifier.subRows.addListener" | "classifier.subRows.removeListener" | "classifier.subRows.removeAllListeners" | "classifier.subRows.optional" | "classifier.subRows.description" | "classifier.subRows.min" | "classifier.subRows.max" | "classifier.subRows.isEmpty" | "classifier.subRows.sum" | "classifier.subRows.avg" | "classifier.subRows.filtered" | "classifier.subRows.sorted" | "classifier.subRows.snapshot" | "classifier.subRows.update" | "classifier.subRows.subscribe" | "classifier.subRows.unsubscribe" | "clothingCare.bleaching" | "clothingCare.drying" | "clothingCare.ironing" | "clothingCare.dryClean" | "clothingCare.tumbleDry" | "clothingCare.washTemperature" | "clothingCare.wash" | "clothingCare.permanentPress" | "clothingCare.gentleOrDelicate" | "clothingCare.bleaching.concat" | "clothingCare.bleaching.indexOf" | "clothingCare.bleaching.lastIndexOf" | "clothingCare.bleaching.slice" | "clothingCare.bleaching.length" | "clothingCare.bleaching.includes" | "clothingCare.bleaching.at" | "clothingCare.bleaching.toLocaleString" | "clothingCare.bleaching.toString" | "clothingCare.bleaching.pop" | "clothingCare.bleaching.push" | "clothingCare.bleaching.join" | "clothingCare.bleaching.shift" | "clothingCare.bleaching.splice" | "clothingCare.bleaching.unshift" | "clothingCare.bleaching.every" | "clothingCare.bleaching.some" | "clothingCare.bleaching.forEach" | "clothingCare.bleaching.map" | "clothingCare.bleaching.filter" | "clothingCare.bleaching.reduce" | "clothingCare.bleaching.reduceRight" | "clothingCare.bleaching.find" | "clothingCare.bleaching.findIndex" | "clothingCare.bleaching.entries" | "clothingCare.bleaching.keys" | "clothingCare.bleaching.values" | "clothingCare.bleaching.flatMap" | "clothingCare.bleaching.flat" | "clothingCare.bleaching.type" | "clothingCare.bleaching.isValid" | "clothingCare.bleaching.toJSON" | "clothingCare.bleaching.addListener" | "clothingCare.bleaching.removeListener" | "clothingCare.bleaching.removeAllListeners" | "clothingCare.bleaching.optional" | "clothingCare.bleaching.description" | "clothingCare.bleaching.min" | "clothingCare.bleaching.max" | "clothingCare.bleaching.remove" | "clothingCare.bleaching.move" | "clothingCare.bleaching.swap" | "clothingCare.bleaching.isEmpty" | "clothingCare.bleaching.sum" | "clothingCare.bleaching.avg" | "clothingCare.bleaching.filtered" | "clothingCare.bleaching.sorted" | "clothingCare.bleaching.snapshot" | "clothingCare.drying.concat" | "clothingCare.drying.indexOf" | "clothingCare.drying.lastIndexOf" | "clothingCare.drying.slice" | "clothingCare.drying.length" | "clothingCare.drying.includes" | "clothingCare.drying.at" | "clothingCare.drying.toLocaleString" | "clothingCare.drying.toString" | "clothingCare.drying.pop" | "clothingCare.drying.push" | "clothingCare.drying.join" | "clothingCare.drying.shift" | "clothingCare.drying.splice" | "clothingCare.drying.unshift" | "clothingCare.drying.every" | "clothingCare.drying.some" | "clothingCare.drying.forEach" | "clothingCare.drying.map" | "clothingCare.drying.filter" | "clothingCare.drying.reduce" | "clothingCare.drying.reduceRight" | "clothingCare.drying.find" | "clothingCare.drying.findIndex" | "clothingCare.drying.entries" | "clothingCare.drying.keys" | "clothingCare.drying.values" | "clothingCare.drying.flatMap" | "clothingCare.drying.flat" | "clothingCare.drying.type" | "clothingCare.drying.isValid" | "clothingCare.drying.toJSON" | "clothingCare.drying.addListener" | "clothingCare.drying.removeListener" | "clothingCare.drying.removeAllListeners" | "clothingCare.drying.optional" | "clothingCare.drying.description" | "clothingCare.drying.min" | "clothingCare.drying.max" | "clothingCare.drying.remove" | "clothingCare.drying.move" | "clothingCare.drying.swap" | "clothingCare.drying.isEmpty" | "clothingCare.drying.sum" | "clothingCare.drying.avg" | "clothingCare.drying.filtered" | "clothingCare.drying.sorted" | "clothingCare.drying.snapshot" | "clothingCare.ironing.concat" | "clothingCare.ironing.indexOf" | "clothingCare.ironing.lastIndexOf" | "clothingCare.ironing.slice" | "clothingCare.ironing.length" | "clothingCare.ironing.includes" | "clothingCare.ironing.at" | "clothingCare.ironing.toLocaleString" | "clothingCare.ironing.toString" | "clothingCare.ironing.pop" | "clothingCare.ironing.push" | "clothingCare.ironing.join" | "clothingCare.ironing.shift" | "clothingCare.ironing.splice" | "clothingCare.ironing.unshift" | "clothingCare.ironing.every" | "clothingCare.ironing.some" | "clothingCare.ironing.forEach" | "clothingCare.ironing.map" | "clothingCare.ironing.filter" | "clothingCare.ironing.reduce" | "clothingCare.ironing.reduceRight" | "clothingCare.ironing.find" | "clothingCare.ironing.findIndex" | "clothingCare.ironing.entries" | "clothingCare.ironing.keys" | "clothingCare.ironing.values" | "clothingCare.ironing.flatMap" | "clothingCare.ironing.flat" | "clothingCare.ironing.type" | "clothingCare.ironing.isValid" | "clothingCare.ironing.toJSON" | "clothingCare.ironing.addListener" | "clothingCare.ironing.removeListener" | "clothingCare.ironing.removeAllListeners" | "clothingCare.ironing.optional" | "clothingCare.ironing.description" | "clothingCare.ironing.min" | "clothingCare.ironing.max" | "clothingCare.ironing.remove" | "clothingCare.ironing.move" | "clothingCare.ironing.swap" | "clothingCare.ironing.isEmpty" | "clothingCare.ironing.sum" | "clothingCare.ironing.avg" | "clothingCare.ironing.filtered" | "clothingCare.ironing.sorted" | "clothingCare.ironing.snapshot" | "clothingCare.dryClean.concat" | "clothingCare.dryClean.indexOf" | "clothingCare.dryClean.lastIndexOf" | "clothingCare.dryClean.slice" | "clothingCare.dryClean.length" | "clothingCare.dryClean.includes" | "clothingCare.dryClean.at" | "clothingCare.dryClean.toLocaleString" | "clothingCare.dryClean.toString" | "clothingCare.dryClean.pop" | "clothingCare.dryClean.push" | "clothingCare.dryClean.join" | "clothingCare.dryClean.shift" | "clothingCare.dryClean.splice" | "clothingCare.dryClean.unshift" | "clothingCare.dryClean.every" | "clothingCare.dryClean.some" | "clothingCare.dryClean.forEach" | "clothingCare.dryClean.map" | "clothingCare.dryClean.filter" | "clothingCare.dryClean.reduce" | "clothingCare.dryClean.reduceRight" | "clothingCare.dryClean.find" | "clothingCare.dryClean.findIndex" | "clothingCare.dryClean.entries" | "clothingCare.dryClean.keys" | "clothingCare.dryClean.values" | "clothingCare.dryClean.flatMap" | "clothingCare.dryClean.flat" | "clothingCare.dryClean.type" | "clothingCare.dryClean.isValid" | "clothingCare.dryClean.toJSON" | "clothingCare.dryClean.addListener" | "clothingCare.dryClean.removeListener" | "clothingCare.dryClean.removeAllListeners" | "clothingCare.dryClean.optional" | "clothingCare.dryClean.description" | "clothingCare.dryClean.min" | "clothingCare.dryClean.max" | "clothingCare.dryClean.remove" | "clothingCare.dryClean.move" | "clothingCare.dryClean.swap" | "clothingCare.dryClean.isEmpty" | "clothingCare.dryClean.sum" | "clothingCare.dryClean.avg" | "clothingCare.dryClean.filtered" | "clothingCare.dryClean.sorted" | "clothingCare.dryClean.snapshot" | "clothingCare.tumbleDry.concat" | "clothingCare.tumbleDry.indexOf" | "clothingCare.tumbleDry.lastIndexOf" | "clothingCare.tumbleDry.slice" | "clothingCare.tumbleDry.length" | "clothingCare.tumbleDry.includes" | "clothingCare.tumbleDry.at" | "clothingCare.tumbleDry.toLocaleString" | "clothingCare.tumbleDry.toString" | "clothingCare.tumbleDry.pop" | "clothingCare.tumbleDry.push" | "clothingCare.tumbleDry.join" | "clothingCare.tumbleDry.shift" | "clothingCare.tumbleDry.splice" | "clothingCare.tumbleDry.unshift" | "clothingCare.tumbleDry.every" | "clothingCare.tumbleDry.some" | "clothingCare.tumbleDry.forEach" | "clothingCare.tumbleDry.map" | "clothingCare.tumbleDry.filter" | "clothingCare.tumbleDry.reduce" | "clothingCare.tumbleDry.reduceRight" | "clothingCare.tumbleDry.find" | "clothingCare.tumbleDry.findIndex" | "clothingCare.tumbleDry.entries" | "clothingCare.tumbleDry.keys" | "clothingCare.tumbleDry.values" | "clothingCare.tumbleDry.flatMap" | "clothingCare.tumbleDry.flat" | "clothingCare.tumbleDry.type" | "clothingCare.tumbleDry.isValid" | "clothingCare.tumbleDry.toJSON" | "clothingCare.tumbleDry.addListener" | "clothingCare.tumbleDry.removeListener" | "clothingCare.tumbleDry.removeAllListeners" | "clothingCare.tumbleDry.optional" | "clothingCare.tumbleDry.description" | "clothingCare.tumbleDry.min" | "clothingCare.tumbleDry.max" | "clothingCare.tumbleDry.remove" | "clothingCare.tumbleDry.move" | "clothingCare.tumbleDry.swap" | "clothingCare.tumbleDry.isEmpty" | "clothingCare.tumbleDry.sum" | "clothingCare.tumbleDry.avg" | "clothingCare.tumbleDry.filtered" | "clothingCare.tumbleDry.sorted" | "clothingCare.tumbleDry.snapshot" | "clothingCare.washTemperature.concat" | "clothingCare.washTemperature.indexOf" | "clothingCare.washTemperature.lastIndexOf" | "clothingCare.washTemperature.slice" | "clothingCare.washTemperature.length" | "clothingCare.washTemperature.includes" | "clothingCare.washTemperature.at" | "clothingCare.washTemperature.toLocaleString" | "clothingCare.washTemperature.toString" | "clothingCare.washTemperature.pop" | "clothingCare.washTemperature.push" | "clothingCare.washTemperature.join" | "clothingCare.washTemperature.shift" | "clothingCare.washTemperature.splice" | "clothingCare.washTemperature.unshift" | "clothingCare.washTemperature.every" | "clothingCare.washTemperature.some" | "clothingCare.washTemperature.forEach" | "clothingCare.washTemperature.map" | "clothingCare.washTemperature.filter" | "clothingCare.washTemperature.reduce" | "clothingCare.washTemperature.reduceRight" | "clothingCare.washTemperature.find" | "clothingCare.washTemperature.findIndex" | "clothingCare.washTemperature.entries" | "clothingCare.washTemperature.keys" | "clothingCare.washTemperature.values" | "clothingCare.washTemperature.flatMap" | "clothingCare.washTemperature.flat" | "clothingCare.washTemperature.type" | "clothingCare.washTemperature.isValid" | "clothingCare.washTemperature.toJSON" | "clothingCare.washTemperature.addListener" | "clothingCare.washTemperature.removeListener" | "clothingCare.washTemperature.removeAllListeners" | "clothingCare.washTemperature.optional" | "clothingCare.washTemperature.description" | "clothingCare.washTemperature.min" | "clothingCare.washTemperature.max" | "clothingCare.washTemperature.remove" | "clothingCare.washTemperature.move" | "clothingCare.washTemperature.swap" | "clothingCare.washTemperature.isEmpty" | "clothingCare.washTemperature.sum" | "clothingCare.washTemperature.avg" | "clothingCare.washTemperature.filtered" | "clothingCare.washTemperature.sorted" | "clothingCare.washTemperature.snapshot" | "clothingCare.wash.concat" | "clothingCare.wash.indexOf" | "clothingCare.wash.lastIndexOf" | "clothingCare.wash.slice" | "clothingCare.wash.length" | "clothingCare.wash.includes" | "clothingCare.wash.at" | "clothingCare.wash.toLocaleString" | "clothingCare.wash.toString" | "clothingCare.wash.pop" | "clothingCare.wash.push" | "clothingCare.wash.join" | "clothingCare.wash.shift" | "clothingCare.wash.splice" | "clothingCare.wash.unshift" | "clothingCare.wash.every" | "clothingCare.wash.some" | "clothingCare.wash.forEach" | "clothingCare.wash.map" | "clothingCare.wash.filter" | "clothingCare.wash.reduce" | "clothingCare.wash.reduceRight" | "clothingCare.wash.find" | "clothingCare.wash.findIndex" | "clothingCare.wash.entries" | "clothingCare.wash.keys" | "clothingCare.wash.values" | "clothingCare.wash.flatMap" | "clothingCare.wash.flat" | "clothingCare.wash.type" | "clothingCare.wash.isValid" | "clothingCare.wash.toJSON" | "clothingCare.wash.addListener" | "clothingCare.wash.removeListener" | "clothingCare.wash.removeAllListeners" | "clothingCare.wash.optional" | "clothingCare.wash.description" | "clothingCare.wash.min" | "clothingCare.wash.max" | "clothingCare.wash.remove" | "clothingCare.wash.move" | "clothingCare.wash.swap" | "clothingCare.wash.isEmpty" | "clothingCare.wash.sum" | "clothingCare.wash.avg" | "clothingCare.wash.filtered" | "clothingCare.wash.sorted" | "clothingCare.wash.snapshot" | "clothingCare.permanentPress.concat" | "clothingCare.permanentPress.indexOf" | "clothingCare.permanentPress.lastIndexOf" | "clothingCare.permanentPress.slice" | "clothingCare.permanentPress.length" | "clothingCare.permanentPress.includes" | "clothingCare.permanentPress.at" | "clothingCare.permanentPress.toLocaleString" | "clothingCare.permanentPress.toString" | "clothingCare.permanentPress.pop" | "clothingCare.permanentPress.push" | "clothingCare.permanentPress.join" | "clothingCare.permanentPress.shift" | "clothingCare.permanentPress.splice" | "clothingCare.permanentPress.unshift" | "clothingCare.permanentPress.every" | "clothingCare.permanentPress.some" | "clothingCare.permanentPress.forEach" | "clothingCare.permanentPress.map" | "clothingCare.permanentPress.filter" | "clothingCare.permanentPress.reduce" | "clothingCare.permanentPress.reduceRight" | "clothingCare.permanentPress.find" | "clothingCare.permanentPress.findIndex" | "clothingCare.permanentPress.entries" | "clothingCare.permanentPress.keys" | "clothingCare.permanentPress.values" | "clothingCare.permanentPress.flatMap" | "clothingCare.permanentPress.flat" | "clothingCare.permanentPress.type" | "clothingCare.permanentPress.isValid" | "clothingCare.permanentPress.toJSON" | "clothingCare.permanentPress.addListener" | "clothingCare.permanentPress.removeListener" | "clothingCare.permanentPress.removeAllListeners" | "clothingCare.permanentPress.optional" | "clothingCare.permanentPress.description" | "clothingCare.permanentPress.min" | "clothingCare.permanentPress.max" | "clothingCare.permanentPress.remove" | "clothingCare.permanentPress.move" | "clothingCare.permanentPress.swap" | "clothingCare.permanentPress.isEmpty" | "clothingCare.permanentPress.sum" | "clothingCare.permanentPress.avg" | "clothingCare.permanentPress.filtered" | "clothingCare.permanentPress.sorted" | "clothingCare.permanentPress.snapshot" | "clothingCare.gentleOrDelicate.concat" | "clothingCare.gentleOrDelicate.indexOf" | "clothingCare.gentleOrDelicate.lastIndexOf" | "clothingCare.gentleOrDelicate.slice" | "clothingCare.gentleOrDelicate.length" | "clothingCare.gentleOrDelicate.includes" | "clothingCare.gentleOrDelicate.at" | "clothingCare.gentleOrDelicate.toLocaleString" | "clothingCare.gentleOrDelicate.toString" | "clothingCare.gentleOrDelicate.pop" | "clothingCare.gentleOrDelicate.push" | "clothingCare.gentleOrDelicate.join" | "clothingCare.gentleOrDelicate.shift" | "clothingCare.gentleOrDelicate.splice" | "clothingCare.gentleOrDelicate.unshift" | "clothingCare.gentleOrDelicate.every" | "clothingCare.gentleOrDelicate.some" | "clothingCare.gentleOrDelicate.forEach" | "clothingCare.gentleOrDelicate.map" | "clothingCare.gentleOrDelicate.filter" | "clothingCare.gentleOrDelicate.reduce" | "clothingCare.gentleOrDelicate.reduceRight" | "clothingCare.gentleOrDelicate.find" | "clothingCare.gentleOrDelicate.findIndex" | "clothingCare.gentleOrDelicate.entries" | "clothingCare.gentleOrDelicate.keys" | "clothingCare.gentleOrDelicate.values" | "clothingCare.gentleOrDelicate.flatMap" | "clothingCare.gentleOrDelicate.flat" | "clothingCare.gentleOrDelicate.type" | "clothingCare.gentleOrDelicate.isValid" | "clothingCare.gentleOrDelicate.toJSON" | "clothingCare.gentleOrDelicate.addListener" | "clothingCare.gentleOrDelicate.removeListener" | "clothingCare.gentleOrDelicate.removeAllListeners" | "clothingCare.gentleOrDelicate.optional" | "clothingCare.gentleOrDelicate.description" | "clothingCare.gentleOrDelicate.min" | "clothingCare.gentleOrDelicate.max" | "clothingCare.gentleOrDelicate.remove" | "clothingCare.gentleOrDelicate.move" | "clothingCare.gentleOrDelicate.swap" | "clothingCare.gentleOrDelicate.isEmpty" | "clothingCare.gentleOrDelicate.sum" | "clothingCare.gentleOrDelicate.avg" | "clothingCare.gentleOrDelicate.filtered" | "clothingCare.gentleOrDelicate.sorted" | "clothingCare.gentleOrDelicate.snapshot" | "inseamSize.value" | "inseamSize.uom" | "lengthSize.value" | "lengthSize.uom" | "waistSize.value" | "waistSize.uom" | "madeOf.concat" | "madeOf.indexOf" | "madeOf.lastIndexOf" | "madeOf.slice" | "madeOf.length" | "madeOf.includes" | "madeOf.at" | "madeOf.toLocaleString" | "madeOf.toString" | "madeOf.pop" | "madeOf.push" | "madeOf.join" | "madeOf.shift" | "madeOf.splice" | "madeOf.unshift" | "madeOf.every" | "madeOf.some" | "madeOf.forEach" | "madeOf.map" | "madeOf.filter" | "madeOf.reduce" | "madeOf.reduceRight" | "madeOf.find" | "madeOf.findIndex" | "madeOf.entries" | "madeOf.keys" | "madeOf.values" | "madeOf.flatMap" | "madeOf.flat" | "madeOf.type" | "madeOf.isValid" | "madeOf.toJSON" | "madeOf.addListener" | "madeOf.removeListener" | "madeOf.removeAllListeners" | "madeOf.optional" | "madeOf.description" | "madeOf.min" | "madeOf.max" | "madeOf.remove" | "madeOf.move" | "madeOf.swap" | "madeOf.isEmpty" | "madeOf.sum" | "madeOf.avg" | "madeOf.filtered" | "madeOf.sorted" | "madeOf.snapshot" | "asins.concat" | "asins.indexOf" | "asins.lastIndexOf" | "asins.slice" | "asins.length" | "asins.includes" | "asins.at" | "asins.toLocaleString" | "asins.toString" | "asins.pop" | "asins.push" | "asins.join" | "asins.shift" | "asins.splice" | "asins.unshift" | "asins.every" | "asins.some" | "asins.forEach" | "asins.map" | "asins.filter" | "asins.reduce" | "asins.reduceRight" | "asins.find" | "asins.findIndex" | "asins.entries" | "asins.keys" | "asins.values" | "asins.flatMap" | "asins.flat" | "asins.type" | "asins.isValid" | "asins.toJSON" | "asins.addListener" | "asins.removeListener" | "asins.removeAllListeners" | "asins.optional" | "asins.description" | "asins.min" | "asins.max" | "asins.remove" | "asins.move" | "asins.swap" | "asins.isEmpty" | "asins.sum" | "asins.avg" | "asins.filtered" | "asins.sorted" | "asins.snapshot" | "customAttributes.concat" | "customAttributes.indexOf" | "customAttributes.lastIndexOf" | "customAttributes.slice" | "customAttributes.length" | "customAttributes.includes" | "customAttributes.at" | "customAttributes.toLocaleString" | "customAttributes.toString" | "customAttributes.pop" | "customAttributes.push" | "customAttributes.join" | "customAttributes.shift" | "customAttributes.splice" | "customAttributes.unshift" | "customAttributes.every" | "customAttributes.some" | "customAttributes.forEach" | "customAttributes.map" | "customAttributes.filter" | "customAttributes.reduce" | "customAttributes.reduceRight" | "customAttributes.find" | "customAttributes.findIndex" | "customAttributes.entries" | "customAttributes.keys" | "customAttributes.values" | "customAttributes.flatMap" | "customAttributes.flat" | "customAttributes.type" | "customAttributes.isValid" | "customAttributes.toJSON" | "customAttributes.addListener" | "customAttributes.removeListener" | "customAttributes.removeAllListeners" | "customAttributes.optional" | "customAttributes.description" | "customAttributes.min" | "customAttributes.max" | "customAttributes.remove" | "customAttributes.move" | "customAttributes.swap" | "customAttributes.isEmpty" | "customAttributes.sum" | "customAttributes.avg" | "customAttributes.filtered" | "customAttributes.sorted" | "customAttributes.snapshot" | "features.concat" | "features.indexOf" | "features.lastIndexOf" | "features.slice" | "features.length" | "features.includes" | "features.at" | "features.toLocaleString" | "features.toString" | "features.pop" | "features.push" | "features.join" | "features.shift" | "features.splice" | "features.unshift" | "features.every" | "features.some" | "features.forEach" | "features.map" | "features.filter" | "features.reduce" | "features.reduceRight" | "features.find" | "features.findIndex" | "features.entries" | "features.keys" | "features.values" | "features.flatMap" | "features.flat" | "features.type" | "features.isValid" | "features.toJSON" | "features.addListener" | "features.removeListener" | "features.removeAllListeners" | "features.optional" | "features.description" | "features.min" | "features.max" | "features.remove" | "features.move" | "features.swap" | "features.isEmpty" | "features.sum" | "features.avg" | "features.filtered" | "features.sorted" | "features.snapshot" | "weight.value" | "weight.uom" | "upcs.concat" | "upcs.indexOf" | "upcs.lastIndexOf" | "upcs.slice" | "upcs.length" | "upcs.includes" | "upcs.at" | "upcs.toLocaleString" | "upcs.toString" | "upcs.pop" | "upcs.push" | "upcs.join" | "upcs.shift" | "upcs.splice" | "upcs.unshift" | "upcs.every" | "upcs.some" | "upcs.forEach" | "upcs.map" | "upcs.filter" | "upcs.reduce" | "upcs.reduceRight" | "upcs.find" | "upcs.findIndex" | "upcs.entries" | "upcs.keys" | "upcs.values" | "upcs.flatMap" | "upcs.flat" | "upcs.type" | "upcs.isValid" | "upcs.toJSON" | "upcs.addListener" | "upcs.removeListener" | "upcs.removeAllListeners" | "upcs.optional" | "upcs.description" | "upcs.min" | "upcs.max" | "upcs.remove" | "upcs.move" | "upcs.swap" | "upcs.isEmpty" | "upcs.sum" | "upcs.avg" | "upcs.filtered" | "upcs.sorted" | "upcs.snapshot" | "footSize.value" | "footSize.uom" | "heelHeight.value" | "heelHeight.uom" | "bustSize.value" | "bustSize.uom" | "chestSize.value" | "chestSize.uom" | "neckSize.value" | "neckSize.uom" | "sleeveSize.value" | "sleeveSize.uom" | "awards.concat" | "awards.indexOf" | "awards.lastIndexOf" | "awards.slice" | "awards.length" | "awards.includes" | "awards.at" | "awards.toLocaleString" | "awards.toString" | "awards.pop" | "awards.push" | "awards.join" | "awards.shift" | "awards.splice" | "awards.unshift" | "awards.every" | "awards.some" | "awards.forEach" | "awards.map" | "awards.filter" | "awards.reduce" | "awards.reduceRight" | "awards.find" | "awards.findIndex" | "awards.entries" | "awards.keys" | "awards.values" | "awards.flatMap" | "awards.flat" | "awards.type" | "awards.isValid" | "awards.toJSON" | "awards.addListener" | "awards.removeListener" | "awards.removeAllListeners" | "awards.optional" | "awards.description" | "awards.min" | "awards.max" | "awards.remove" | "awards.move" | "awards.swap" | "awards.isEmpty" | "awards.sum" | "awards.avg" | "awards.filtered" | "awards.sorted" | "awards.snapshot" | "authors.concat" | "authors.indexOf" | "authors.lastIndexOf" | "authors.slice" | "authors.length" | "authors.includes" | "authors.at" | "authors.toLocaleString" | "authors.toString" | "authors.pop" | "authors.push" | "authors.join" | "authors.shift" | "authors.splice" | "authors.unshift" | "authors.every" | "authors.some" | "authors.forEach" | "authors.map" | "authors.filter" | "authors.reduce" | "authors.reduceRight" | "authors.find" | "authors.findIndex" | "authors.entries" | "authors.keys" | "authors.values" | "authors.flatMap" | "authors.flat" | "authors.type" | "authors.isValid" | "authors.toJSON" | "authors.addListener" | "authors.removeListener" | "authors.removeAllListeners" | "authors.optional" | "authors.description" | "authors.min" | "authors.max" | "authors.remove" | "authors.move" | "authors.swap" | "authors.isEmpty" | "authors.sum" | "authors.avg" | "authors.filtered" | "authors.sorted" | "authors.snapshot" | "illustrators.concat" | "illustrators.indexOf" | "illustrators.lastIndexOf" | "illustrators.slice" | "illustrators.length" | "illustrators.includes" | "illustrators.at" | "illustrators.toLocaleString" | "illustrators.toString" | "illustrators.pop" | "illustrators.push" | "illustrators.join" | "illustrators.shift" | "illustrators.splice" | "illustrators.unshift" | "illustrators.every" | "illustrators.some" | "illustrators.forEach" | "illustrators.map" | "illustrators.filter" | "illustrators.reduce" | "illustrators.reduceRight" | "illustrators.find" | "illustrators.findIndex" | "illustrators.entries" | "illustrators.keys" | "illustrators.values" | "illustrators.flatMap" | "illustrators.flat" | "illustrators.type" | "illustrators.isValid" | "illustrators.toJSON" | "illustrators.addListener" | "illustrators.removeListener" | "illustrators.removeAllListeners" | "illustrators.optional" | "illustrators.description" | "illustrators.min" | "illustrators.max" | "illustrators.remove" | "illustrators.move" | "illustrators.swap" | "illustrators.isEmpty" | "illustrators.sum" | "illustrators.avg" | "illustrators.filtered" | "illustrators.sorted" | "illustrators.snapshot" | "publishers.concat" | "publishers.indexOf" | "publishers.lastIndexOf" | "publishers.slice" | "publishers.length" | "publishers.includes" | "publishers.at" | "publishers.toLocaleString" | "publishers.toString" | "publishers.pop" | "publishers.push" | "publishers.join" | "publishers.shift" | "publishers.splice" | "publishers.unshift" | "publishers.every" | "publishers.some" | "publishers.forEach" | "publishers.map" | "publishers.filter" | "publishers.reduce" | "publishers.reduceRight" | "publishers.find" | "publishers.findIndex" | "publishers.entries" | "publishers.keys" | "publishers.values" | "publishers.flatMap" | "publishers.flat" | "publishers.type" | "publishers.isValid" | "publishers.toJSON" | "publishers.addListener" | "publishers.removeListener" | "publishers.removeAllListeners" | "publishers.optional" | "publishers.description" | "publishers.min" | "publishers.max" | "publishers.remove" | "publishers.move" | "publishers.swap" | "publishers.isEmpty" | "publishers.sum" | "publishers.avg" | "publishers.filtered" | "publishers.sorted" | "publishers.snapshot" | "collectionOf.concat" | "collectionOf.indexOf" | "collectionOf.lastIndexOf" | "collectionOf.slice" | "collectionOf.length" | "collectionOf.includes" | "collectionOf.at" | "collectionOf.toLocaleString" | "collectionOf.toString" | "collectionOf.pop" | "collectionOf.push" | "collectionOf.join" | "collectionOf.shift" | "collectionOf.splice" | "collectionOf.unshift" | "collectionOf.every" | "collectionOf.some" | "collectionOf.forEach" | "collectionOf.map" | "collectionOf.filter" | "collectionOf.reduce" | "collectionOf.reduceRight" | "collectionOf.find" | "collectionOf.findIndex" | "collectionOf.entries" | "collectionOf.keys" | "collectionOf.values" | "collectionOf.flatMap" | "collectionOf.flat" | "collectionOf.type" | "collectionOf.isValid" | "collectionOf.toJSON" | "collectionOf.addListener" | "collectionOf.removeListener" | "collectionOf.removeAllListeners" | "collectionOf.optional" | "collectionOf.description" | "collectionOf.min" | "collectionOf.max" | "collectionOf.remove" | "collectionOf.move" | "collectionOf.swap" | "collectionOf.isEmpty" | "collectionOf.sum" | "collectionOf.avg" | "collectionOf.filtered" | "collectionOf.sorted" | "collectionOf.snapshot" | "directedBy.concat" | "directedBy.indexOf" | "directedBy.lastIndexOf" | "directedBy.slice" | "directedBy.length" | "directedBy.includes" | "directedBy.at" | "directedBy.toLocaleString" | "directedBy.toString" | "directedBy.pop" | "directedBy.push" | "directedBy.join" | "directedBy.shift" | "directedBy.splice" | "directedBy.unshift" | "directedBy.every" | "directedBy.some" | "directedBy.forEach" | "directedBy.map" | "directedBy.filter" | "directedBy.reduce" | "directedBy.reduceRight" | "directedBy.find" | "directedBy.findIndex" | "directedBy.entries" | "directedBy.keys" | "directedBy.values" | "directedBy.flatMap" | "directedBy.flat" | "directedBy.type" | "directedBy.isValid" | "directedBy.toJSON" | "directedBy.addListener" | "directedBy.removeListener" | "directedBy.removeAllListeners" | "directedBy.optional" | "directedBy.description" | "directedBy.min" | "directedBy.max" | "directedBy.remove" | "directedBy.move" | "directedBy.swap" | "directedBy.isEmpty" | "directedBy.sum" | "directedBy.avg" | "directedBy.filtered" | "directedBy.sorted" | "directedBy.snapshot" | "runtime.value" | "runtime.uom" | "starring.concat" | "starring.indexOf" | "starring.lastIndexOf" | "starring.slice" | "starring.length" | "starring.includes" | "starring.at" | "starring.toLocaleString" | "starring.toString" | "starring.pop" | "starring.push" | "starring.join" | "starring.shift" | "starring.splice" | "starring.unshift" | "starring.every" | "starring.some" | "starring.forEach" | "starring.map" | "starring.filter" | "starring.reduce" | "starring.reduceRight" | "starring.find" | "starring.findIndex" | "starring.entries" | "starring.keys" | "starring.values" | "starring.flatMap" | "starring.flat" | "starring.type" | "starring.isValid" | "starring.toJSON" | "starring.addListener" | "starring.removeListener" | "starring.removeAllListeners" | "starring.optional" | "starring.description" | "starring.min" | "starring.max" | "starring.remove" | "starring.move" | "starring.swap" | "starring.isEmpty" | "starring.sum" | "starring.avg" | "starring.filtered" | "starring.sorted" | "starring.snapshot" | "tracks.concat" | "tracks.indexOf" | "tracks.lastIndexOf" | "tracks.slice" | "tracks.length" | "tracks.includes" | "tracks.at" | "tracks.toLocaleString" | "tracks.toString" | "tracks.pop" | "tracks.push" | "tracks.join" | "tracks.shift" | "tracks.splice" | "tracks.unshift" | "tracks.every" | "tracks.some" | "tracks.forEach" | "tracks.map" | "tracks.filter" | "tracks.reduce" | "tracks.reduceRight" | "tracks.find" | "tracks.findIndex" | "tracks.entries" | "tracks.keys" | "tracks.values" | "tracks.flatMap" | "tracks.flat" | "tracks.type" | "tracks.isValid" | "tracks.toJSON" | "tracks.addListener" | "tracks.removeListener" | "tracks.removeAllListeners" | "tracks.optional" | "tracks.description" | "tracks.min" | "tracks.max" | "tracks.remove" | "tracks.move" | "tracks.swap" | "tracks.isEmpty" | "tracks.sum" | "tracks.avg" | "tracks.filtered" | "tracks.sorted" | "tracks.snapshot" | "cordLength.value" | "cordLength.uom" | "connectors.concat" | "connectors.indexOf" | "connectors.lastIndexOf" | "connectors.slice" | "connectors.length" | "connectors.includes" | "connectors.at" | "connectors.toLocaleString" | "connectors.toString" | "connectors.pop" | "connectors.push" | "connectors.join" | "connectors.shift" | "connectors.splice" | "connectors.unshift" | "connectors.every" | "connectors.some" | "connectors.forEach" | "connectors.map" | "connectors.filter" | "connectors.reduce" | "connectors.reduceRight" | "connectors.find" | "connectors.findIndex" | "connectors.entries" | "connectors.keys" | "connectors.values" | "connectors.flatMap" | "connectors.flat" | "connectors.type" | "connectors.isValid" | "connectors.toJSON" | "connectors.addListener" | "connectors.removeListener" | "connectors.removeAllListeners" | "connectors.optional" | "connectors.description" | "connectors.min" | "connectors.max" | "connectors.remove" | "connectors.move" | "connectors.swap" | "connectors.isEmpty" | "connectors.sum" | "connectors.avg" | "connectors.filtered" | "connectors.sorted" | "connectors.snapshot" | "compatibleWith.concat" | "compatibleWith.indexOf" | "compatibleWith.lastIndexOf" | "compatibleWith.slice" | "compatibleWith.length" | "compatibleWith.includes" | "compatibleWith.at" | "compatibleWith.toLocaleString" | "compatibleWith.toString" | "compatibleWith.pop" | "compatibleWith.push" | "compatibleWith.join" | "compatibleWith.shift" | "compatibleWith.splice" | "compatibleWith.unshift" | "compatibleWith.every" | "compatibleWith.some" | "compatibleWith.forEach" | "compatibleWith.map" | "compatibleWith.filter" | "compatibleWith.reduce" | "compatibleWith.reduceRight" | "compatibleWith.find" | "compatibleWith.findIndex" | "compatibleWith.entries" | "compatibleWith.keys" | "compatibleWith.values" | "compatibleWith.flatMap" | "compatibleWith.flat" | "compatibleWith.type" | "compatibleWith.isValid" | "compatibleWith.toJSON" | "compatibleWith.addListener" | "compatibleWith.removeListener" | "compatibleWith.removeAllListeners" | "compatibleWith.optional" | "compatibleWith.description" | "compatibleWith.min" | "compatibleWith.max" | "compatibleWith.remove" | "compatibleWith.move" | "compatibleWith.swap" | "compatibleWith.isEmpty" | "compatibleWith.sum" | "compatibleWith.avg" | "compatibleWith.filtered" | "compatibleWith.sorted" | "compatibleWith.snapshot" | "batteryCapacity.value" | "batteryCapacity.uom" | "batteryStats.amperage" | "batteryStats.voltage" | "batteryStats.wattage" | "batteryStats.amperage.value" | "batteryStats.amperage.uom" | "batteryStats.voltage.value" | "batteryStats.voltage.uom" | "batteryStats.wattage.value" | "batteryStats.wattage.uom" | "manufactureDate.month" | "manufactureDate.year" | "rateOfEnergyCapacity.value" | "rateOfEnergyCapacity.uom" | "acAdapter.amperage" | "acAdapter.voltage" | "acAdapter.wattage" | "acAdapter.amperage.value" | "acAdapter.amperage.uom" | "acAdapter.voltage.value" | "acAdapter.voltage.uom" | "acAdapter.wattage.value" | "acAdapter.wattage.uom" | "operatingSystem.operatingSystem" | "operatingSystem.version" | "screenSize.value" | "screenSize.uom" | "writeSpeed.value" | "writeSpeed.uom" | "readSpeed.value" | "readSpeed.uom" | "dataTransferRate.value" | "dataTransferRate.uom" | "rpm.value" | "rpm.uom" | "cacheSize.value" | "cacheSize.uom" | "memorySpeed.value" | "memorySpeed.uom" | "massInAir.value" | "massInAir.uom" | "massWaterDisplaced.value" | "massWaterDisplaced.uom" | "density.value" | "density.uom" | "dinnerwareInventory.bread-butter" | "dinnerwareInventory.coffee-mug" | "dinnerwareInventory.dinner-plate" | "dinnerwareInventory.salad-plate" | "dinnerwareInventory.bread-butter.count" | "dinnerwareInventory.bread-butter.shape" | "dinnerwareInventory.coffee-mug.count" | "dinnerwareInventory.coffee-mug.shape" | "dinnerwareInventory.dinner-plate.count" | "dinnerwareInventory.dinner-plate.shape" | "dinnerwareInventory.salad-plate.count" | "dinnerwareInventory.salad-plate.shape" | "flatwareInventory.salad-fork" | "flatwareInventory.dinner-fork" | "flatwareInventory.spoon" | "flatwareInventory.butter-knife" | "clubLength.value" | "clubLength.uom" | "lie.value" | "lie.uom" | "loft.value" | "loft.uom" | "swingWeight.value" | "swingWeight.uom" | "ages.min" | "ages.max" | "players.min" | "players.max" | "partNumbers.concat" | "partNumbers.indexOf" | "partNumbers.lastIndexOf" | "partNumbers.slice" | "partNumbers.length" | "partNumbers.includes" | "partNumbers.at" | "partNumbers.toLocaleString" | "partNumbers.toString" | "partNumbers.pop" | "partNumbers.push" | "partNumbers.join" | "partNumbers.shift" | "partNumbers.splice" | "partNumbers.unshift" | "partNumbers.every" | "partNumbers.some" | "partNumbers.forEach" | "partNumbers.map" | "partNumbers.filter" | "partNumbers.reduce" | "partNumbers.reduceRight" | "partNumbers.find" | "partNumbers.findIndex" | "partNumbers.entries" | "partNumbers.keys" | "partNumbers.values" | "partNumbers.flatMap" | "partNumbers.flat" | "partNumbers.type" | "partNumbers.isValid" | "partNumbers.toJSON" | "partNumbers.addListener" | "partNumbers.removeListener" | "partNumbers.removeAllListeners" | "partNumbers.optional" | "partNumbers.description" | "partNumbers.min" | "partNumbers.max" | "partNumbers.remove" | "partNumbers.move" | "partNumbers.swap" | "partNumbers.isEmpty" | "partNumbers.sum" | "partNumbers.avg" | "partNumbers.filtered" | "partNumbers.sorted" | "partNumbers.snapshot", header: string, section: "bleaching" | "drying" | "ironing" | "dryClean" | "tumbleDry" | "washTemperature" | "wash" | "permanentPress" | "gentleOrDelicate", readonly?: boolean) => MRT_ColumnDef<IProduct>;
    date: <U_2, UKey_2 extends keyof U_2>(...dependencies: IDependency<U_2, UKey_2>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header?: string | undefined, opts?: {
        min?: Date | undefined;
        max?: Date | undefined;
        dateType?: "past" | "future" | undefined;
    } | undefined, required?: boolean, readonly?: boolean) => MRT_ColumnDef<IProduct>;
    dictionary: <U_3, UKey_3 extends keyof U_3>(...dependencies: IDependency<U_3, UKey_3>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, objectType: string, opts?: import("../../defs/dbDictCol").DBDictColOptions | undefined) => MRT_ColumnDef<IProduct>;
    dollar: <U_4, UKey_4 extends keyof U_4>(...dependencies: IDependency<U_4, UKey_4>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        min?: number | undefined;
        max?: number | undefined;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
    }) => MRT_ColumnDef<IProduct, number | undefined>;
    double: <U_5, UKey_5 extends keyof U_5>(...dependencies: IDependency<U_5, UKey_5>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        min?: number | undefined;
        max?: number | undefined;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
    }) => MRT_ColumnDef<IProduct>;
    enum: <U_6, UKey_6 extends keyof U_6>(...dependencies: IDependency<U_6, UKey_6>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        id?: string | undefined;
        options?: Record<string, string | {
            text: string;
            key: string;
        }> | undefined;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
        enumKey?: "amperageUnits" | "rateOfEnergyCapacityUOM" | "powerConsumptionUOM" | "voltageUOM" | "wattageUOM" | "applianceTypes" | "aspectRatios" | "auctionSites" | "backlineTypes" | "barcodeTypes" | "batteryTypes" | "bookGenres" | "bookTypes" | "bootTypes" | "cellCarriers" | "closureTypes" | "clubTypes" | "collarTypes" | "connectorGenders" | "consoleTypes" | "dataConnectorTypes" | "videoConnectorTypes" | "powerConnectorTypes" | "cableTypes" | "countries" | "cuffTypes" | "detailsTypes" | "dinnerwareTypes" | "dressTypes" | "ESRBRatings" | "fabricTypes" | "face-pov" | "face-x" | "face-y" | "face-z" | "fitTypes" | "flags" | "flatwareTypes" | "flexTypes" | "garmentLengths" | "genders" | "handOrientations" | "heightMaps" | "ironTypes" | "itemConditions" | "itemDispositions" | "languages" | "legStyles" | "lifestyleTypes" | "metalTypes" | "movieGenres" | "movieRatings" | "musicFormatTypes" | "musicGenres" | "neckTypes" | "operatingSystems" | "operatingSystemNames" | "payorTypes" | "pocketTypes" | "powerTypes" | "productColors" | "productImageDisposition" | "provinces" | "riseTypes" | "materials" | "shaftTypes" | "shapeTypes" | "shippers" | "shippingSpeeds" | "shoeHeelTypes" | "shoeWidths" | "sleeveLengths" | "sleeveTypes" | "productImageType" | "strapTypes" | "suitTypes" | "swimsuitBottomStyles" | "swimsuitTopStyles" | "toeStyles" | "tvRatings" | "videoFormatTypes" | "videoTypes" | "wedgeTypes" | "driveTypes" | "memorySpeedUOM" | "memoryFormFactors" | "compatibleDevices" | "memoryTypes" | "driveInterfaces" | "connectivity" | "driveFormFactors" | "awardNames" | "hugoAwardCategories" | "emmyAwardCategories" | "grammyAwardCategories" | "tonyAwardCategories" | "pulizerPrizeCategories" | "oscarAwardCategories" | "durationUOM" | "nyTimesAwardCategories" | "capacityUOM" | "casLatency" | "attributePaths" | undefined;
    }) => MRT_ColumnDef<IProduct, string | undefined>;
    flags: <U_7, UKey_7 extends keyof U_7>(...dependencies: IDependency<U_7, UKey_7>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, flags: string[], readonly?: boolean) => MRT_ColumnDef<IProduct>;
    freeSolo: <U_8, UKey_8 extends keyof U_8>(...dependencies: IDependency<U_8, UKey_8>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, comparator: (x?: string | undefined, y?: string | undefined) => Compared, opts?: {
        required?: boolean | undefined;
        readonly?: boolean | undefined;
        multiple?: boolean | undefined;
    } | undefined) => MRT_ColumnDef<IProduct, string | undefined>;
    int: <U_9, UKey_9 extends keyof U_9>(...dependencies: IDependency<U_9, UKey_9>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        min?: number | undefined;
        max?: number | undefined;
        readonly?: boolean | undefined;
        required?: boolean | undefined;
    }) => MRT_ColumnDef<IProduct>;
    intMeasure: <U_10, UKey_10 extends keyof U_10>(...dependencies: IDependency<U_10, UKey_10>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, uom: string, opts: {
        min?: number | undefined;
        max?: number | undefined;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
    }) => MRT_ColumnDef<IProduct, number | undefined>;
    listOfEmbed: <U_11, UKey_11 extends keyof U_11>(...dependencies: IDependency<U_11, UKey_11>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, objectType: string, readonly?: boolean) => MRT_ColumnDef<IProduct, ListBack<unknown>>;
    listOfEnum: <U_12, UKey_12 extends keyof U_12>(...dependencies: IDependency<U_12, UKey_12>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        options?: Record<string, string | {
            text: string;
            key: string;
        }> | undefined;
        required?: boolean | undefined;
        readonly?: false | undefined;
        enumKey: "amperageUnits" | "rateOfEnergyCapacityUOM" | "powerConsumptionUOM" | "voltageUOM" | "wattageUOM" | "applianceTypes" | "aspectRatios" | "auctionSites" | "backlineTypes" | "barcodeTypes" | "batteryTypes" | "bookGenres" | "bookTypes" | "bootTypes" | "cellCarriers" | "closureTypes" | "clubTypes" | "collarTypes" | "connectorGenders" | "consoleTypes" | "dataConnectorTypes" | "videoConnectorTypes" | "powerConnectorTypes" | "cableTypes" | "countries" | "cuffTypes" | "detailsTypes" | "dinnerwareTypes" | "dressTypes" | "ESRBRatings" | "fabricTypes" | "face-pov" | "face-x" | "face-y" | "face-z" | "fitTypes" | "flags" | "flatwareTypes" | "flexTypes" | "garmentLengths" | "genders" | "handOrientations" | "heightMaps" | "ironTypes" | "itemConditions" | "itemDispositions" | "languages" | "legStyles" | "lifestyleTypes" | "metalTypes" | "movieGenres" | "movieRatings" | "musicFormatTypes" | "musicGenres" | "neckTypes" | "operatingSystems" | "operatingSystemNames" | "payorTypes" | "pocketTypes" | "powerTypes" | "productColors" | "productImageDisposition" | "provinces" | "riseTypes" | "materials" | "shaftTypes" | "shapeTypes" | "shippers" | "shippingSpeeds" | "shoeHeelTypes" | "shoeWidths" | "sleeveLengths" | "sleeveTypes" | "productImageType" | "strapTypes" | "suitTypes" | "swimsuitBottomStyles" | "swimsuitTopStyles" | "toeStyles" | "tvRatings" | "videoFormatTypes" | "videoTypes" | "wedgeTypes" | "driveTypes" | "memorySpeedUOM" | "memoryFormFactors" | "compatibleDevices" | "memoryTypes" | "driveInterfaces" | "connectivity" | "driveFormFactors" | "awardNames" | "hugoAwardCategories" | "emmyAwardCategories" | "grammyAwardCategories" | "tonyAwardCategories" | "pulizerPrizeCategories" | "oscarAwardCategories" | "durationUOM" | "nyTimesAwardCategories" | "capacityUOM" | "casLatency" | "attributePaths";
    }) => MRT_ColumnDef<IProduct>;
    listOfFreeSolo: <U_13, UKey_13 extends keyof U_13>(...dependencies: IDependency<U_13, UKey_13>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, objectType: string, comparator: (x: any, y: any) => Compared, readonly?: boolean) => MRT_ColumnDef<IProduct, any>;
    listOfObject: <U_14, UKey_14 extends keyof U_14>(...dependencies: IDependency<U_14, UKey_14>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, objectType: string, readonly?: boolean) => MRT_ColumnDef<IProduct, ListBack<import("material-react-table").MRT_RowData & {
        _id: import("bson").ObjectId;
    }>>;
    listOfPrimitive: <U_15, UKey_15 extends keyof U_15>(...dependencies: IDependency<U_15, UKey_15>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, objectType: string, readonly?: boolean) => MRT_ColumnDef<IProduct, ListBack<unknown>>;
    lookup: <U_16, UKey_16 extends keyof U_16>(...dependencies: IDependency<U_16, UKey_16>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", header: string, opts: {
        onChange?: ((setValue: (name: string, value: any) => void, oldValue: any, newValue: any) => void) | undefined;
        objectType: string;
    }) => MRT_ColumnDef<IProduct, any>;
    measure: <U_17, UKey_17 extends keyof U_17>(...dependencies: IDependency<U_17, UKey_17>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, uom: string, opts: {
        min?: number | undefined;
        max?: number | undefined;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
        id?: string | undefined;
    }) => MRT_ColumnDef<IProduct, number | undefined>;
    percent: <U_18, UKey_18 extends keyof U_18>(...dependencies: IDependency<U_18, UKey_18>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        min?: number | undefined;
        max?: number | undefined;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
    }) => MRT_ColumnDef<IProduct, number | undefined>;
    PK: () => MRT_ColumnDef<IProduct>;
    radio: <U_19, UKey_19 extends keyof U_19>(...dependencies: IDependency<U_19, UKey_19>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header: string, opts: {
        enumKey: string;
        required?: boolean | undefined;
        readonly?: boolean | undefined;
    }) => MRT_ColumnDef<IProduct>;
    string: <U_20, UKey_20 extends keyof U_20>(...dependencies: IDependency<U_20, UKey_20>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header?: string | undefined, formatter?: ((x?: unknown) => string) | undefined, opts?: Pick<import("@tanstack/table-core").ColumnMeta<IProduct, unknown>, "type" | "pattern" | "required" | "min" | "max" | "maxLength" | "minLength" | "step" | "validate" | "readonly"> | undefined) => MRT_ColumnDef<IProduct, unknown>;
    text: <U_21, UKey_21 extends keyof U_21>(...dependencies: IDependency<U_21, UKey_21>[]) => (name: "length" | "includes" | "text" | "artist" | "metal" | "flags" | "powerTypes" | "compatibleDevices" | "connectivity" | "itemType" | "gender" | "closureType" | "fitType" | "legStyle" | "lengthType" | "lifestyleType" | "pocketType" | "riseType" | "bootType" | "heightMapType" | "shoeHeelType" | "shoeWidth" | "strapType" | "toeStyle" | "swimsuitBottomStyle" | "swimsuitTopStyle" | "backlineType" | "collarType" | "cuffType" | "dressType" | "neckType" | "sleeveType" | "suitType" | "sleeveLength" | "bookGenre" | "bookType" | "cableType" | "language" | "videoFormat" | "movieRating" | "videoGenre" | "tvRating" | "videoType" | "consoleType" | "musicFormat" | "musicGenre" | "applianceType" | "clubType" | "flexType" | "handOrientation" | "ironType" | "shaftType" | "wedgeType" | "material" | "driveType" | "driveInterface" | "driveForm" | "memoryForm" | "memoryType" | "color" | "type" | "input" | "output" | "title" | "pattern" | "size" | "_id" | "hashTags" | "allHashTags" | "detailTypes" | "height" | "width" | "brand" | "capacity" | "classifier" | "clothingCare" | "description" | "inseamSize" | "lengthSize" | "waistSize" | "madeOf" | "cutNo" | "styleNo" | "rnNo" | "asins" | "customAttributes" | "features" | "weight" | "modelNo" | "notes" | "upcs" | "origin" | "circa" | "testedOn" | "footSize" | "heelHeight" | "bustSize" | "chestSize" | "neckSize" | "sleeveSize" | "awards" | "copyright" | "mediaSubtitle" | "mediaTitle" | "authors" | "blurb" | "edition" | "illustrators" | "pages" | "publishers" | "collectionOf" | "count" | "directedBy" | "runtime" | "starring" | "season" | "ESRBRating" | "studio" | "tracks" | "cordLength" | "connectors" | "compatibleWith" | "batteryCount" | "batteryType" | "batteryCapacity" | "batteryStats" | "manufactureDate" | "rateOfEnergyCapacity" | "acAdapter" | "aspectRatio" | "cellCarrier" | "operatingSystem" | "screenSize" | "writeSpeed" | "readSpeed" | "dataTransferRate" | "rpm" | "cacheSize" | "memorySpeed" | "pinCount" | "dataTransferBandwidth" | "CASLatency" | "massInAir" | "massWaterDisplaced" | "density" | "dinnerwareInventory" | "flatwareInventory" | "clubLength" | "lie" | "loft" | "swingWeight" | "ages" | "players" | "pieceCount" | "modelName" | "overrideTitle" | "partNumbers" | "primaryColor" | "primaryColorSelector" | "sizeText" | "sizeSelector", $header?: string | undefined, formatter?: ((x?: unknown) => string) | undefined, opts?: Pick<import("@tanstack/table-core").ColumnMeta<IProduct, unknown>, "type" | "pattern" | "required" | "min" | "max" | "maxLength" | "minLength" | "step" | "validate" | "readonly"> | undefined) => MRT_ColumnDef<IProduct, unknown>;
};
export declare const computerComponentsDetails: MRT_ColumnDef<IProduct>[];
export declare const computerComponentsDrivesDetails: MRT_ColumnDef<IProduct>[];
export declare const computerComponentsRamDetails: MRT_ColumnDef<IProduct>[];
